[
  {
    "path": "posts/welcome/",
    "title": "A deeper look into data.table functionalities",
    "description": "Welcome to our new blog, More into data.table. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Basil Okola",
        "url": "https://github.com/Bokola"
      }
    ],
    "date": "2020-12-04",
    "categories": [],
    "contents": "\r\n\r\nData table syntax is of the form DT[i, j, by]\r\ni: on which row\r\nj: what to do\r\nby: group by what\r\nData Manipulation\r\nJust looking\r\nRemoving information\r\nAdding information\r\nReducing information\r\nCombining information\r\nJust looking\r\n\r\n\r\nirisDT = as.data.table(iris)\r\ntables() # show loaded tables\r\n\r\n\r\n     NAME NROW NCOL MB\r\n1: irisDT  150    5  0\r\n                                                        COLS KEY\r\n1: Sepal.Length,Sepal.Width,Petal.Length,Petal.Width,Species    \r\nTotal: 0MB\r\n\r\nSorting / ordering rows\r\nsetorder(data.table, â€¦)\r\n-: to sort a variable in descending order\r\n\r\n\r\nsetorder(irisDT, Sepal.Length, Sepal.Width)\r\nirisDT\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          4.3         3.0          1.1         0.1    setosa\r\n  2:          4.4         2.9          1.4         0.2    setosa\r\n  3:          4.4         3.0          1.3         0.2    setosa\r\n  4:          4.4         3.2          1.3         0.2    setosa\r\n  5:          4.5         2.3          1.3         0.3    setosa\r\n ---                                                            \r\n146:          7.7         2.6          6.9         2.3 virginica\r\n147:          7.7         2.8          6.7         2.0 virginica\r\n148:          7.7         3.0          6.1         2.3 virginica\r\n149:          7.7         3.8          6.7         2.2 virginica\r\n150:          7.9         3.8          6.4         2.0 virginica\r\n\r\n\r\n\r\nsetorder(irisDT, -Species, Sepal.Width)\r\nirisDT\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.0         2.2          5.0         1.5 virginica\r\n  2:          4.9         2.5          4.5         1.7 virginica\r\n  3:          5.7         2.5          5.0         2.0 virginica\r\n  4:          6.3         2.5          5.0         1.9 virginica\r\n  5:          6.7         2.5          5.8         1.8 virginica\r\n ---                                                            \r\n146:          5.4         3.9          1.3         0.4    setosa\r\n147:          5.8         4.0          1.2         0.2    setosa\r\n148:          5.2         4.1          1.5         0.1    setosa\r\n149:          5.5         4.2          1.4         0.2    setosa\r\n150:          5.7         4.4          1.5         0.4    setosa\r\n\r\nRemoving information\r\nSelecting rows\r\nDT[i, j, by]\r\ni: on which rows?\r\n\r\n\r\nirisDT[3:4]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          5.7         2.5            5         2.0 virginica\r\n2:          6.3         2.5            5         1.9 virginica\r\n\r\n\r\n\r\nirisDT[3:4,] #row 3 and 4\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          5.7         2.5            5         2.0 virginica\r\n2:          6.3         2.5            5         1.9 virginica\r\n\r\nirisDT[-(1:5)] #delete rows 1:5\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.1         2.6          5.6         1.4 virginica\r\n  2:          7.7         2.6          6.9         2.3 virginica\r\n  3:          5.8         2.7          5.1         1.9 virginica\r\n  4:          5.8         2.7          5.1         1.9 virginica\r\n  5:          6.3         2.7          4.9         1.8 virginica\r\n ---                                                            \r\n141:          5.4         3.9          1.3         0.4    setosa\r\n142:          5.8         4.0          1.2         0.2    setosa\r\n143:          5.2         4.1          1.5         0.1    setosa\r\n144:          5.5         4.2          1.4         0.2    setosa\r\n145:          5.7         4.4          1.5         0.4    setosa\r\n\r\nirisDT[!(1:5)] # using false to delete as well\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.1         2.6          5.6         1.4 virginica\r\n  2:          7.7         2.6          6.9         2.3 virginica\r\n  3:          5.8         2.7          5.1         1.9 virginica\r\n  4:          5.8         2.7          5.1         1.9 virginica\r\n  5:          6.3         2.7          4.9         1.8 virginica\r\n ---                                                            \r\n141:          5.4         3.9          1.3         0.4    setosa\r\n142:          5.8         4.0          1.2         0.2    setosa\r\n143:          5.2         4.1          1.5         0.1    setosa\r\n144:          5.5         4.2          1.4         0.2    setosa\r\n145:          5.7         4.4          1.5         0.4    setosa\r\n\r\nirisDT[.N] # last row\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r\n1:          5.7         4.4          1.5         0.4  setosa\r\n\r\nirisDT[1:(.N-10)] # all but the last 10 rows\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.0         2.2          5.0         1.5 virginica\r\n  2:          4.9         2.5          4.5         1.7 virginica\r\n  3:          5.7         2.5          5.0         2.0 virginica\r\n  4:          6.3         2.5          5.0         1.9 virginica\r\n  5:          6.7         2.5          5.8         1.8 virginica\r\n ---                                                            \r\n136:          4.9         3.6          1.4         0.1    setosa\r\n137:          5.0         3.6          1.4         0.2    setosa\r\n138:          5.1         3.7          1.5         0.4    setosa\r\n139:          5.3         3.7          1.5         0.2    setosa\r\n140:          5.4         3.7          1.5         0.2    setosa\r\n\r\nirisDT[Species == \"virginica\"] # based on conditions fulfilled in columns\r\n\r\n\r\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n 1:          6.0         2.2          5.0         1.5 virginica\r\n 2:          4.9         2.5          4.5         1.7 virginica\r\n 3:          5.7         2.5          5.0         2.0 virginica\r\n 4:          6.3         2.5          5.0         1.9 virginica\r\n 5:          6.7         2.5          5.8         1.8 virginica\r\n 6:          6.1         2.6          5.6         1.4 virginica\r\n 7:          7.7         2.6          6.9         2.3 virginica\r\n 8:          5.8         2.7          5.1         1.9 virginica\r\n 9:          5.8         2.7          5.1         1.9 virginica\r\n10:          6.3         2.7          4.9         1.8 virginica\r\n11:          6.4         2.7          5.3         1.9 virginica\r\n12:          5.6         2.8          4.9         2.0 virginica\r\n13:          5.8         2.8          5.1         2.4 virginica\r\n14:          6.2         2.8          4.8         1.8 virginica\r\n15:          6.3         2.8          5.1         1.5 virginica\r\n16:          6.4         2.8          5.6         2.1 virginica\r\n17:          6.4         2.8          5.6         2.2 virginica\r\n18:          7.4         2.8          6.1         1.9 virginica\r\n19:          7.7         2.8          6.7         2.0 virginica\r\n20:          6.3         2.9          5.6         1.8 virginica\r\n21:          7.3         2.9          6.3         1.8 virginica\r\n22:          5.9         3.0          5.1         1.8 virginica\r\n23:          6.0         3.0          4.8         1.8 virginica\r\n24:          6.1         3.0          4.9         1.8 virginica\r\n25:          6.5         3.0          5.8         2.2 virginica\r\n26:          6.5         3.0          5.5         1.8 virginica\r\n27:          6.5         3.0          5.2         2.0 virginica\r\n28:          6.7         3.0          5.2         2.3 virginica\r\n29:          6.8         3.0          5.5         2.1 virginica\r\n30:          7.1         3.0          5.9         2.1 virginica\r\n31:          7.2         3.0          5.8         1.6 virginica\r\n32:          7.6         3.0          6.6         2.1 virginica\r\n33:          7.7         3.0          6.1         2.3 virginica\r\n34:          6.4         3.1          5.5         1.8 virginica\r\n35:          6.7         3.1          5.6         2.4 virginica\r\n36:          6.9         3.1          5.4         2.1 virginica\r\n37:          6.9         3.1          5.1         2.3 virginica\r\n38:          6.4         3.2          5.3         2.3 virginica\r\n39:          6.5         3.2          5.1         2.0 virginica\r\n40:          6.8         3.2          5.9         2.3 virginica\r\n41:          6.9         3.2          5.7         2.3 virginica\r\n42:          7.2         3.2          6.0         1.8 virginica\r\n43:          6.3         3.3          6.0         2.5 virginica\r\n44:          6.7         3.3          5.7         2.1 virginica\r\n45:          6.7         3.3          5.7         2.5 virginica\r\n46:          6.2         3.4          5.4         2.3 virginica\r\n47:          6.3         3.4          5.6         2.4 virginica\r\n48:          7.2         3.6          6.1         2.5 virginica\r\n49:          7.7         3.8          6.7         2.2 virginica\r\n50:          7.9         3.8          6.4         2.0 virginica\r\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n\r\nirisDT[Species %like% \"^v\"] # using %like% helper function\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\r\n  1:          6.0         2.2          5.0         1.5  virginica\r\n  2:          4.9         2.5          4.5         1.7  virginica\r\n  3:          5.7         2.5          5.0         2.0  virginica\r\n  4:          6.3         2.5          5.0         1.9  virginica\r\n  5:          6.7         2.5          5.8         1.8  virginica\r\n  6:          6.1         2.6          5.6         1.4  virginica\r\n  7:          7.7         2.6          6.9         2.3  virginica\r\n  8:          5.8         2.7          5.1         1.9  virginica\r\n  9:          5.8         2.7          5.1         1.9  virginica\r\n 10:          6.3         2.7          4.9         1.8  virginica\r\n 11:          6.4         2.7          5.3         1.9  virginica\r\n 12:          5.6         2.8          4.9         2.0  virginica\r\n 13:          5.8         2.8          5.1         2.4  virginica\r\n 14:          6.2         2.8          4.8         1.8  virginica\r\n 15:          6.3         2.8          5.1         1.5  virginica\r\n 16:          6.4         2.8          5.6         2.1  virginica\r\n 17:          6.4         2.8          5.6         2.2  virginica\r\n 18:          7.4         2.8          6.1         1.9  virginica\r\n 19:          7.7         2.8          6.7         2.0  virginica\r\n 20:          6.3         2.9          5.6         1.8  virginica\r\n 21:          7.3         2.9          6.3         1.8  virginica\r\n 22:          5.9         3.0          5.1         1.8  virginica\r\n 23:          6.0         3.0          4.8         1.8  virginica\r\n 24:          6.1         3.0          4.9         1.8  virginica\r\n 25:          6.5         3.0          5.8         2.2  virginica\r\n 26:          6.5         3.0          5.5         1.8  virginica\r\n 27:          6.5         3.0          5.2         2.0  virginica\r\n 28:          6.7         3.0          5.2         2.3  virginica\r\n 29:          6.8         3.0          5.5         2.1  virginica\r\n 30:          7.1         3.0          5.9         2.1  virginica\r\n 31:          7.2         3.0          5.8         1.6  virginica\r\n 32:          7.6         3.0          6.6         2.1  virginica\r\n 33:          7.7         3.0          6.1         2.3  virginica\r\n 34:          6.4         3.1          5.5         1.8  virginica\r\n 35:          6.7         3.1          5.6         2.4  virginica\r\n 36:          6.9         3.1          5.4         2.1  virginica\r\n 37:          6.9         3.1          5.1         2.3  virginica\r\n 38:          6.4         3.2          5.3         2.3  virginica\r\n 39:          6.5         3.2          5.1         2.0  virginica\r\n 40:          6.8         3.2          5.9         2.3  virginica\r\n 41:          6.9         3.2          5.7         2.3  virginica\r\n 42:          7.2         3.2          6.0         1.8  virginica\r\n 43:          6.3         3.3          6.0         2.5  virginica\r\n 44:          6.7         3.3          5.7         2.1  virginica\r\n 45:          6.7         3.3          5.7         2.5  virginica\r\n 46:          6.2         3.4          5.4         2.3  virginica\r\n 47:          6.3         3.4          5.6         2.4  virginica\r\n 48:          7.2         3.6          6.1         2.5  virginica\r\n 49:          7.7         3.8          6.7         2.2  virginica\r\n 50:          7.9         3.8          6.4         2.0  virginica\r\n 51:          5.0         2.0          3.5         1.0 versicolor\r\n 52:          6.0         2.2          4.0         1.0 versicolor\r\n 53:          6.2         2.2          4.5         1.5 versicolor\r\n 54:          5.0         2.3          3.3         1.0 versicolor\r\n 55:          5.5         2.3          4.0         1.3 versicolor\r\n 56:          6.3         2.3          4.4         1.3 versicolor\r\n 57:          4.9         2.4          3.3         1.0 versicolor\r\n 58:          5.5         2.4          3.8         1.1 versicolor\r\n 59:          5.5         2.4          3.7         1.0 versicolor\r\n 60:          5.1         2.5          3.0         1.1 versicolor\r\n 61:          5.5         2.5          4.0         1.3 versicolor\r\n 62:          5.6         2.5          3.9         1.1 versicolor\r\n 63:          6.3         2.5          4.9         1.5 versicolor\r\n 64:          5.5         2.6          4.4         1.2 versicolor\r\n 65:          5.7         2.6          3.5         1.0 versicolor\r\n 66:          5.8         2.6          4.0         1.2 versicolor\r\n 67:          5.2         2.7          3.9         1.4 versicolor\r\n 68:          5.6         2.7          4.2         1.3 versicolor\r\n 69:          5.8         2.7          4.1         1.0 versicolor\r\n 70:          5.8         2.7          3.9         1.2 versicolor\r\n 71:          6.0         2.7          5.1         1.6 versicolor\r\n 72:          5.7         2.8          4.5         1.3 versicolor\r\n 73:          5.7         2.8          4.1         1.3 versicolor\r\n 74:          6.1         2.8          4.0         1.3 versicolor\r\n 75:          6.1         2.8          4.7         1.2 versicolor\r\n 76:          6.5         2.8          4.6         1.5 versicolor\r\n 77:          6.8         2.8          4.8         1.4 versicolor\r\n 78:          5.6         2.9          3.6         1.3 versicolor\r\n 79:          5.7         2.9          4.2         1.3 versicolor\r\n 80:          6.0         2.9          4.5         1.5 versicolor\r\n 81:          6.1         2.9          4.7         1.4 versicolor\r\n 82:          6.2         2.9          4.3         1.3 versicolor\r\n 83:          6.4         2.9          4.3         1.3 versicolor\r\n 84:          6.6         2.9          4.6         1.3 versicolor\r\n 85:          5.4         3.0          4.5         1.5 versicolor\r\n 86:          5.6         3.0          4.5         1.5 versicolor\r\n 87:          5.6         3.0          4.1         1.3 versicolor\r\n 88:          5.7         3.0          4.2         1.2 versicolor\r\n 89:          5.9         3.0          4.2         1.5 versicolor\r\n 90:          6.1         3.0          4.6         1.4 versicolor\r\n 91:          6.6         3.0          4.4         1.4 versicolor\r\n 92:          6.7         3.0          5.0         1.7 versicolor\r\n 93:          6.7         3.1          4.4         1.4 versicolor\r\n 94:          6.7         3.1          4.7         1.5 versicolor\r\n 95:          6.9         3.1          4.9         1.5 versicolor\r\n 96:          5.9         3.2          4.8         1.8 versicolor\r\n 97:          6.4         3.2          4.5         1.5 versicolor\r\n 98:          7.0         3.2          4.7         1.4 versicolor\r\n 99:          6.3         3.3          4.7         1.6 versicolor\r\n100:          6.0         3.4          4.5         1.6 versicolor\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species\r\n\r\nirisDT[Petal.Width %between% c(0.3, 0.4)] # values in an interval\r\n\r\n\r\n    Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r\n 1:          4.5         2.3          1.3         0.3  setosa\r\n 2:          4.8         3.0          1.4         0.3  setosa\r\n 3:          4.6         3.4          1.4         0.3  setosa\r\n 4:          5.0         3.4          1.6         0.4  setosa\r\n 5:          5.4         3.4          1.5         0.4  setosa\r\n 6:          5.0         3.5          1.3         0.3  setosa\r\n 7:          5.1         3.5          1.4         0.3  setosa\r\n 8:          5.1         3.7          1.5         0.4  setosa\r\n 9:          5.1         3.8          1.5         0.3  setosa\r\n10:          5.1         3.8          1.9         0.4  setosa\r\n11:          5.7         3.8          1.7         0.3  setosa\r\n12:          5.4         3.9          1.7         0.4  setosa\r\n13:          5.4         3.9          1.3         0.4  setosa\r\n14:          5.7         4.4          1.5         0.4  setosa\r\n\r\nSelecting columns\r\nDT[i, j, by]\r\nj: what to do? -> select columns\r\n\r\n\r\nirisDT[, Species] # returns a vector\r\n\r\n\r\n  [1] virginica  virginica  virginica  virginica  virginica \r\n  [6] virginica  virginica  virginica  virginica  virginica \r\n [11] virginica  virginica  virginica  virginica  virginica \r\n [16] virginica  virginica  virginica  virginica  virginica \r\n [21] virginica  virginica  virginica  virginica  virginica \r\n [26] virginica  virginica  virginica  virginica  virginica \r\n [31] virginica  virginica  virginica  virginica  virginica \r\n [36] virginica  virginica  virginica  virginica  virginica \r\n [41] virginica  virginica  virginica  virginica  virginica \r\n [46] virginica  virginica  virginica  virginica  virginica \r\n [51] versicolor versicolor versicolor versicolor versicolor\r\n [56] versicolor versicolor versicolor versicolor versicolor\r\n [61] versicolor versicolor versicolor versicolor versicolor\r\n [66] versicolor versicolor versicolor versicolor versicolor\r\n [71] versicolor versicolor versicolor versicolor versicolor\r\n [76] versicolor versicolor versicolor versicolor versicolor\r\n [81] versicolor versicolor versicolor versicolor versicolor\r\n [86] versicolor versicolor versicolor versicolor versicolor\r\n [91] versicolor versicolor versicolor versicolor versicolor\r\n [96] versicolor versicolor versicolor versicolor versicolor\r\n[101] setosa     setosa     setosa     setosa     setosa    \r\n[106] setosa     setosa     setosa     setosa     setosa    \r\n[111] setosa     setosa     setosa     setosa     setosa    \r\n[116] setosa     setosa     setosa     setosa     setosa    \r\n[121] setosa     setosa     setosa     setosa     setosa    \r\n[126] setosa     setosa     setosa     setosa     setosa    \r\n[131] setosa     setosa     setosa     setosa     setosa    \r\n[136] setosa     setosa     setosa     setosa     setosa    \r\n[141] setosa     setosa     setosa     setosa     setosa    \r\n[146] setosa     setosa     setosa     setosa     setosa    \r\nLevels: setosa versicolor virginica\r\n\r\nirisDT[, \"Species\"] # returns a dataframe/data.table\r\n\r\n\r\n       Species\r\n  1: virginica\r\n  2: virginica\r\n  3: virginica\r\n  4: virginica\r\n  5: virginica\r\n ---          \r\n146:    setosa\r\n147:    setosa\r\n148:    setosa\r\n149:    setosa\r\n150:    setosa\r\n\r\nirisDT[, -c(\"Species\")]\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width\r\n  1:          6.0         2.2          5.0         1.5\r\n  2:          4.9         2.5          4.5         1.7\r\n  3:          5.7         2.5          5.0         2.0\r\n  4:          6.3         2.5          5.0         1.9\r\n  5:          6.7         2.5          5.8         1.8\r\n ---                                                  \r\n146:          5.4         3.9          1.3         0.4\r\n147:          5.8         4.0          1.2         0.2\r\n148:          5.2         4.1          1.5         0.1\r\n149:          5.5         4.2          1.4         0.2\r\n150:          5.7         4.4          1.5         0.4\r\n\r\nirisDT[, !c(\"Species\")]\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width\r\n  1:          6.0         2.2          5.0         1.5\r\n  2:          4.9         2.5          4.5         1.7\r\n  3:          5.7         2.5          5.0         2.0\r\n  4:          6.3         2.5          5.0         1.9\r\n  5:          6.7         2.5          5.8         1.8\r\n ---                                                  \r\n146:          5.4         3.9          1.3         0.4\r\n147:          5.8         4.0          1.2         0.2\r\n148:          5.2         4.1          1.5         0.1\r\n149:          5.5         4.2          1.4         0.2\r\n150:          5.7         4.4          1.5         0.4\r\n\r\nirisDT[, list(Species, LS = Sepal.Length)] # select and rename\r\n\r\n\r\n       Species  LS\r\n  1: virginica 6.0\r\n  2: virginica 4.9\r\n  3: virginica 5.7\r\n  4: virginica 6.3\r\n  5: virginica 6.7\r\n ---              \r\n146:    setosa 5.4\r\n147:    setosa 5.8\r\n148:    setosa 5.2\r\n149:    setosa 5.5\r\n150:    setosa 5.7\r\n\r\n# .() is an alias for list\r\n\r\nirisDT[, .(Species, SL = Sepal.Length)]\r\n\r\n\r\n       Species  SL\r\n  1: virginica 6.0\r\n  2: virginica 4.9\r\n  3: virginica 5.7\r\n  4: virginica 6.3\r\n  5: virginica 6.7\r\n ---              \r\n146:    setosa 5.4\r\n147:    setosa 5.8\r\n148:    setosa 5.2\r\n149:    setosa 5.5\r\n150:    setosa 5.7\r\n\r\nirisDT[Species == \"virginica\" & Sepal.Length > 7 & Sepal.Width < 3, !c(\"Species\")]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width\r\n1:          7.7         2.6          6.9         2.3\r\n2:          7.4         2.8          6.1         1.9\r\n3:          7.7         2.8          6.7         2.0\r\n4:          7.3         2.9          6.3         1.8\r\n\r\nirisDT[Species == \"virginica\" &\r\nSepal.Length > 7 &Sepal.Width < 3,.(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width\r\n1:          7.7         2.6          6.9         2.3\r\n2:          7.4         2.8          6.1         1.9\r\n3:          7.7         2.8          6.7         2.0\r\n4:          7.3         2.9          6.3         1.8\r\n\r\nAdding information\r\nMaking new columns - preserving existing ones\r\nDT[i, j, by]\r\nj: what to do? -> compute new columns preserving existing ones\r\ndata.table uses a new operator := to add/update/delete columns (by reference)\r\noption 1\r\n\r\n\r\nirisDT[, maxLength := max(Sepal.Length, Petal.Length)][,\r\n          minWidth := min(Sepal.Length, Petal.Width)]\r\nirisDT\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.0         2.2          5.0         1.5 virginica\r\n  2:          4.9         2.5          4.5         1.7 virginica\r\n  3:          5.7         2.5          5.0         2.0 virginica\r\n  4:          6.3         2.5          5.0         1.9 virginica\r\n  5:          6.7         2.5          5.8         1.8 virginica\r\n ---                                                            \r\n146:          5.4         3.9          1.3         0.4    setosa\r\n147:          5.8         4.0          1.2         0.2    setosa\r\n148:          5.2         4.1          1.5         0.1    setosa\r\n149:          5.5         4.2          1.4         0.2    setosa\r\n150:          5.7         4.4          1.5         0.4    setosa\r\n     maxLength minWidth\r\n  1:       7.9      0.1\r\n  2:       7.9      0.1\r\n  3:       7.9      0.1\r\n  4:       7.9      0.1\r\n  5:       7.9      0.1\r\n ---                   \r\n146:       7.9      0.1\r\n147:       7.9      0.1\r\n148:       7.9      0.1\r\n149:       7.9      0.1\r\n150:       7.9      0.1\r\n\r\noption 2\r\nLHS := RHS form\r\n\r\n\r\nirisDT[, c(\"maxLength\", \"minWidth\") :=\r\n         list(\r\n           max(Sepal.Length, Petal.Length),\r\n           min(Sepal.Width, Petal.Width)\r\n         )]\r\n\r\nirisDT\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.0         2.2          5.0         1.5 virginica\r\n  2:          4.9         2.5          4.5         1.7 virginica\r\n  3:          5.7         2.5          5.0         2.0 virginica\r\n  4:          6.3         2.5          5.0         1.9 virginica\r\n  5:          6.7         2.5          5.8         1.8 virginica\r\n ---                                                            \r\n146:          5.4         3.9          1.3         0.4    setosa\r\n147:          5.8         4.0          1.2         0.2    setosa\r\n148:          5.2         4.1          1.5         0.1    setosa\r\n149:          5.5         4.2          1.4         0.2    setosa\r\n150:          5.7         4.4          1.5         0.4    setosa\r\n     maxLength minWidth\r\n  1:       7.9      0.1\r\n  2:       7.9      0.1\r\n  3:       7.9      0.1\r\n  4:       7.9      0.1\r\n  5:       7.9      0.1\r\n ---                   \r\n146:       7.9      0.1\r\n147:       7.9      0.1\r\n148:       7.9      0.1\r\n149:       7.9      0.1\r\n150:       7.9      0.1\r\n\r\nOption 3\r\nFunctional form\r\n\r\n\r\nirisDT[, `:=` (\r\n  maxLength = max(Sepal.Length, Petal.Length),\r\n  minWidth = min(Sepal.Width, Petal.Width)\r\n)]\r\nirisDT\r\n\r\n\r\n     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n  1:          6.0         2.2          5.0         1.5 virginica\r\n  2:          4.9         2.5          4.5         1.7 virginica\r\n  3:          5.7         2.5          5.0         2.0 virginica\r\n  4:          6.3         2.5          5.0         1.9 virginica\r\n  5:          6.7         2.5          5.8         1.8 virginica\r\n ---                                                            \r\n146:          5.4         3.9          1.3         0.4    setosa\r\n147:          5.8         4.0          1.2         0.2    setosa\r\n148:          5.2         4.1          1.5         0.1    setosa\r\n149:          5.5         4.2          1.4         0.2    setosa\r\n150:          5.7         4.4          1.5         0.4    setosa\r\n     maxLength minWidth\r\n  1:       7.9      0.1\r\n  2:       7.9      0.1\r\n  3:       7.9      0.1\r\n  4:       7.9      0.1\r\n  5:       7.9      0.1\r\n ---                   \r\n146:       7.9      0.1\r\n147:       7.9      0.1\r\n148:       7.9      0.1\r\n149:       7.9      0.1\r\n150:       7.9      0.1\r\n\r\nMaking new columns - dropping existing ones\r\nDT[i, j, by]\r\nj: what to do? -> compute new columns dropping existing ones\r\n\r\n\r\nirisDT[, .(maxLength = pmax(Sepal.Length, Petal.Length),\r\nminWidth = pmin(Sepal.Width, Petal.Width))]\r\n\r\n\r\n     maxLength minWidth\r\n  1:       6.0      1.5\r\n  2:       4.9      1.7\r\n  3:       5.7      2.0\r\n  4:       6.3      1.9\r\n  5:       6.7      1.8\r\n ---                   \r\n146:       5.4      0.4\r\n147:       5.8      0.2\r\n148:       5.2      0.1\r\n149:       5.5      0.2\r\n150:       5.7      0.4\r\n\r\n\r\n\r\nnewIris <- irisDT[, .(Sepal.Area = Sepal.Width * Sepal.Length,\r\nPetal.Area = Petal.Width * Petal.Length)]\r\nnewIris[, Area.Ratio := Petal.Area / Sepal.Area]\r\nnewIris\r\n\r\n\r\n     Sepal.Area Petal.Area  Area.Ratio\r\n  1:      13.20       7.50 0.568181818\r\n  2:      12.25       7.65 0.624489796\r\n  3:      14.25      10.00 0.701754386\r\n  4:      15.75       9.50 0.603174603\r\n  5:      16.75      10.44 0.623283582\r\n ---                                  \r\n146:      21.06       0.52 0.024691358\r\n147:      23.20       0.24 0.010344828\r\n148:      21.32       0.15 0.007035647\r\n149:      23.10       0.28 0.012121212\r\n150:      25.08       0.60 0.023923445\r\n\r\nReducing information\r\nSummarizing rows\r\n\r\n\r\nirisDT[, .(meanSepalLength = mean(Sepal.Length),\r\n           meanSepalWidth = mean(Sepal.Width),\r\n           meanPetalLength = mean(Petal.Length),\r\n           meanPetalWidth = mean(Petal.Width))]\r\n\r\n\r\n   meanSepalLength meanSepalWidth meanPetalLength meanPetalWidth\r\n1:        5.843333       3.057333           3.758       1.199333\r\n\r\n\r\n\r\nirisDT[, .(nSamples = .N, nSpecies = uniqueN(Species))\r\n       ]\r\n\r\n\r\n   nSamples nSpecies\r\n1:      150        3\r\n\r\nSummarizing rows with filtering\r\n\r\n\r\nirisDT[Species == \"versicolor\",.(\r\n  meanSepalLength = mean(Sepal.Length),\r\n           meanSepalWidth = mean(Sepal.Width),\r\n           meanPetalLength = mean(Petal.Length),\r\n           meanPetalWidth = mean(Petal.Width)\r\n)]\r\n\r\n\r\n   meanSepalLength meanSepalWidth meanPetalLength meanPetalWidth\r\n1:           5.936           2.77            4.26          1.326\r\n\r\nGrouping by one or more variables\r\n\r\n\r\nirisDT[, .(meanSepalLength = mean(Sepal.Length),\r\nmeanSepalWidth = mean(Sepal.Width),\r\nmeanPetalLength = mean(Petal.Length),\r\nmeanPetalWidth = mean(Petal.Width)), by = \"Species\"]\r\n\r\n\r\n      Species meanSepalLength meanSepalWidth meanPetalLength\r\n1:  virginica           6.588          2.974           5.552\r\n2: versicolor           5.936          2.770           4.260\r\n3:     setosa           5.006          3.428           1.462\r\n   meanPetalWidth\r\n1:          2.026\r\n2:          1.326\r\n3:          0.246\r\n\r\n\r\n\r\nirisDT[, .(nSamples = .N, nSpecies = uniqueN(Species)), by = .(Species)]\r\n\r\n\r\n      Species nSamples nSpecies\r\n1:  virginica       50        1\r\n2: versicolor       50        1\r\n3:     setosa       50        1\r\n\r\nCombining information\r\njoining 2 data.tables\r\nInner join: return all rows from x where there are matching values in y and all columns from x and y. In case of multiple matches between x and y, all combinations of the matches are returned.\r\nFull join: return all rows and columns from both x and y. \r\nLeft join: return all rows from x and all columns from x and y. In case of multiple matches between x and y, all combinations of the matches are returned.\r\nRight join: return all rows from y and all columns from x and y. In case of multiple matches between x and y, all combinations of the matches are returned.\r\nDT[i, on]\r\ni: join to which data.table?\r\non: join key columns?\r\n\r\n\r\n(x <- data.table(id = c(1, 2, 4, 5, 6),\r\nx = c(9, 12, 14, 21, 8)))\r\n\r\n\r\n   id  x\r\n1:  1  9\r\n2:  2 12\r\n3:  4 14\r\n4:  5 21\r\n5:  6  8\r\n\r\n(y <- data.table(id = c(1, 3, 4, 6, 6),\r\ny = c(8, 14, 19, 2, 4)))\r\n\r\n\r\n   id  y\r\n1:  1  8\r\n2:  3 14\r\n3:  4 19\r\n4:  6  2\r\n5:  6  4\r\n\r\ninner join - data.table\r\n\r\n\r\ny[x, on = .(id), nomatch = 0]\r\n\r\n\r\n   id  y  x\r\n1:  1  8  9\r\n2:  4 19 14\r\n3:  6  2  8\r\n4:  6  4  8\r\n\r\nfull join - merge\r\n\r\n\r\nmerge.data.table(x = x, y = y, by = \"id\", all = TRUE)\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  2 12 NA\r\n3:  3 NA 14\r\n4:  4 14 19\r\n5:  5 21 NA\r\n6:  6  8  2\r\n7:  6  8  4\r\n\r\nleft join - merge\r\n\r\n\r\nmerge.data.table(x = x, y = y, by = \"id\", all.x = TRUE)\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  2 12 NA\r\n3:  4 14 19\r\n4:  5 21 NA\r\n5:  6  8  2\r\n6:  6  8  4\r\n\r\nleft join - data.table\r\n\r\n\r\ny[x, on = .(id)]\r\n\r\n\r\n   id  y  x\r\n1:  1  8  9\r\n2:  2 NA 12\r\n3:  4 19 14\r\n4:  5 NA 21\r\n5:  6  2  8\r\n6:  6  4  8\r\n\r\nright join - merge\r\n\r\n\r\ndata.table::merge.data.table(x = x, y = y, by = \"id\", all.y = T)\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  3 NA 14\r\n3:  4 14 19\r\n4:  6  8  2\r\n5:  6  8  4\r\n\r\nright jpin - data.table\r\n\r\n\r\nx[y, on = .(id)]\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  3 NA 14\r\n3:  4 14 19\r\n4:  6  8  2\r\n5:  6  8  4\r\n\r\nantijoin - data.table\r\n\r\n\r\nx[!y, on = .(id)]\r\n\r\n\r\n   id  x\r\n1:  2 12\r\n2:  5 21\r\n\r\nKeys\r\nNo need of the on argument when performing a join\r\nSorts the data.table in memory by the key column(s)\r\nMultiple columns can be set and used as keys\r\nUseful functions:\r\nsetkey(DT, â€¦) or setkeyv(DT, keys)\r\nhaskey(DT)\r\nkey(DT\r\n\r\n\r\nsetkey(x, id)\r\nsetkey(y, \"id\")\r\nhaskey(x); haskey(y)\r\n\r\n\r\n[1] TRUE\r\n[1] TRUE\r\n\r\nkey(x); key(y)\r\n\r\n\r\n[1] \"id\"\r\n[1] \"id\"\r\n\r\njoins with keys already specified\r\n\r\n\r\n# Inner join x and y\r\nx[y, nomatch = 0]\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  4 14 19\r\n3:  6  8  2\r\n4:  6  8  4\r\n\r\n# Right join x and y\r\nx[y]\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  3 NA 14\r\n3:  4 14 19\r\n4:  6  8  2\r\n5:  6  8  4\r\n\r\n# Left join x and y\r\ny[x]\r\n\r\n\r\n   id  y  x\r\n1:  1  8  9\r\n2:  2 NA 12\r\n3:  4 19 14\r\n4:  5 NA 21\r\n5:  6  2  8\r\n6:  6  4  8\r\n\r\nExercise 3\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(data.table)\r\ndata(starwars)\r\nstarwarsDT <- as.data.table(starwars)\r\nstarwarsDT[1]\r\n\r\n\r\n             name height mass hair_color skin_color eye_color\r\n1: Luke Skywalker    172   77      blond       fair      blue\r\n   birth_year  sex    gender homeworld species\r\n1:         19 male masculine  Tatooine   Human\r\n                                                                                         films\r\n1: The Empire Strikes Back,Revenge of the Sith,Return of the Jedi,A New Hope,The Force Awakens\r\n                            vehicles               starships\r\n1: Snowspeeder,Imperial Speeder Bike X-wing,Imperial shuttle\r\n\r\nstarwarsDT[, .(min = min(mass, na.rm = T),\r\n               max = max(mass, na.rm = T),\r\n               nobs = .N), by = homeworld][nobs >1] \r\n\r\n\r\n    homeworld   min   max nobs\r\n 1:  Tatooine  32.0 136.0   10\r\n 2:     Naboo  32.0  85.0   11\r\n 3:  Alderaan  49.0  79.0    3\r\n 4:  Kashyyyk 112.0 136.0    2\r\n 5:  Corellia  77.0  80.0    2\r\n 6:      <NA>  17.0 140.0   10\r\n 7:    Kamino  78.2  88.0    3\r\n 8: Coruscant  50.0  50.0    3\r\n 9:    Ryloth  55.0  55.0    2\r\n10:    Mirial  50.0  56.2    2\r\n\r\nReshaping data with data.table\r\nTidy data\r\nEach variable is a column -Each observation is a row\r\nEach value is a cell\r\n\r\nTwo fundamental verbs\r\nmelt(): â€˜Wideâ€™ -> â€˜longâ€™ data\r\ndcast(): â€˜longâ€™ -> â€˜wideâ€™ data\r\n\r\nWide format\r\n\r\n\r\nknitr::kable(head(iris[1:4,], n =3))\r\n\r\n\r\n\r\nSepal.Length\r\n\r\n\r\nSepal.Width\r\n\r\n\r\nPetal.Length\r\n\r\n\r\nPetal.Width\r\n\r\n\r\nSpecies\r\n\r\n\r\n5.1\r\n\r\n\r\n3.5\r\n\r\n\r\n1.4\r\n\r\n\r\n0.2\r\n\r\n\r\nsetosa\r\n\r\n\r\n4.9\r\n\r\n\r\n3.0\r\n\r\n\r\n1.4\r\n\r\n\r\n0.2\r\n\r\n\r\nsetosa\r\n\r\n\r\n4.7\r\n\r\n\r\n3.2\r\n\r\n\r\n1.3\r\n\r\n\r\n0.2\r\n\r\n\r\nsetosa\r\n\r\n\r\nmelt(wide_df, id.vars = 'grouping variable', variable.name = 'measures_across_grouping_var',value.name = 'value_name_as_desired')\r\nLong to wide\r\ndcast(long_df, group ~ atttribute, value.var = \"value\")\r\nSeparating and uniting information\r\n\r\n\r\nirisUnited <- irisDT[ , Sepal.Length.Width := paste0(Sepal.Length, \"/\", Sepal.Width)]\r\nirisUnited[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          6.0         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1              6/2.2\r\n2:       7.9      0.1            4.9/2.5\r\n3:       7.9      0.1            5.7/2.5\r\n4:       7.9      0.1            6.3/2.5\r\n5:       7.9      0.1            6.7/2.5\r\n\r\n\r\n\r\nirisSeparated = irisUnited[, c('Sepal.Length', 'Sepal.Width') := tstrsplit(Sepal.Length.Width, \"/\")]\r\nirisSeparated[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:            6         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1              6/2.2\r\n2:       7.9      0.1            4.9/2.5\r\n3:       7.9      0.1            5.7/2.5\r\n4:       7.9      0.1            6.3/2.5\r\n5:       7.9      0.1            6.7/2.5\r\n\r\nHands-on session\r\nExercise 1\r\n\r\n\r\ndata(\"relig_income\")\r\na = as.data.table(relig_income)\r\na[1:10]\r\n\r\n\r\n                   religion <$10k $10-20k $20-30k $30-40k $40-50k\r\n 1:                Agnostic    27      34      60      81      76\r\n 2:                 Atheist    12      27      37      52      35\r\n 3:                Buddhist    27      21      30      34      33\r\n 4:                Catholic   418     617     732     670     638\r\n 5:      Donâ€™t know/refused    15      14      15      11      10\r\n 6:        Evangelical Prot   575     869    1064     982     881\r\n 7:                   Hindu     1       9       7       9      11\r\n 8: Historically Black Prot   228     244     236     238     197\r\n 9:       Jehovah's Witness    20      27      24      24      21\r\n10:                  Jewish    19      19      25      25      30\r\n    $50-75k $75-100k $100-150k >150k Don't know/refused\r\n 1:     137      122       109    84                 96\r\n 2:      70       73        59    74                 76\r\n 3:      58       62        39    53                 54\r\n 4:    1116      949       792   633               1489\r\n 5:      35       21        17    18                116\r\n 6:    1486      949       723   414               1529\r\n 7:      34       47        48    54                 37\r\n 8:     223      131        81    78                339\r\n 9:      30       15        11     6                 37\r\n10:      95       69        87   151                162\r\n\r\nb = melt(a, id.vars = \"religion\", variable.name = \"income_category\", value.name = \"n\")\r\n\r\n\r\n\r\nExercise 2\r\n\r\n\r\ndata(\"storms\")\r\naa = as.data.table(storms)\r\naa[, date:= paste0(year, \"-\", month,\"-\", day)]\r\n\r\n\r\n\r\nUseful symbols/ functions\r\n.SD: Subset of Data for each group\r\n.SD along with lapply can be used to apply any function to multiple columns by group\r\n\r\n.SDcols: Columns of the data.table that are included in .SD\r\nna.omit(): returns the object with incomplete cases removed\r\nSummarizing for specific condition\r\n\r\n\r\ncols = sapply(irisDT, is.numeric)\r\ncols = names(cols)[cols]\r\nirisDT[, lapply(.SD, mean), by = Species, .SDcols = cols]\r\n\r\n\r\n      Species Petal.Length Petal.Width maxLength minWidth\r\n1:  virginica        5.552       2.026       7.9      0.1\r\n2: versicolor        4.260       1.326       7.9      0.1\r\n3:     setosa        1.462       0.246       7.9      0.1\r\n\r\nSummarizing for specific variable of interest\r\n\r\n\r\nirisDT[, lapply(.SD, mean), by = Species, .SDcols = c(\"Petal.Length\", \"Petal.Width\")]\r\n\r\n\r\n      Species Petal.Length Petal.Width\r\n1:  virginica        5.552       2.026\r\n2: versicolor        4.260       1.326\r\n3:     setosa        1.462       0.246\r\n\r\nSummarizing all columns\r\n\r\n\r\nirisDT[ , unlist(recursive = FALSE, lapply(.(mean = mean, sd = sd, min = min, max = max), \r\n                                           function(f) lapply(.SD, f))), by = Species]\r\n\r\n\r\n      Species mean.Sepal.Length mean.Sepal.Width mean.Petal.Length\r\n1:  virginica                NA               NA             5.552\r\n2: versicolor                NA               NA             4.260\r\n3:     setosa                NA               NA             1.462\r\n   mean.Petal.Width mean.maxLength mean.minWidth\r\n1:            2.026            7.9           0.1\r\n2:            1.326            7.9           0.1\r\n3:            0.246            7.9           0.1\r\n   mean.Sepal.Length.Width sd.Sepal.Length sd.Sepal.Width\r\n1:                      NA       0.6358796      0.3224966\r\n2:                      NA       0.5161711      0.3137983\r\n3:                      NA       0.3524897      0.3790644\r\n   sd.Petal.Length sd.Petal.Width sd.maxLength sd.minWidth\r\n1:       0.5518947      0.2746501            0           0\r\n2:       0.4699110      0.1977527            0           0\r\n3:       0.1736640      0.1053856            0           0\r\n   sd.Sepal.Length.Width min.Sepal.Length min.Sepal.Width\r\n1:                    NA              4.9             2.2\r\n2:                    NA              4.9               2\r\n3:                    NA              4.3             2.3\r\n   min.Petal.Length min.Petal.Width min.maxLength min.minWidth\r\n1:              4.5             1.4           7.9          0.1\r\n2:              3.0             1.0           7.9          0.1\r\n3:              1.0             0.1           7.9          0.1\r\n   min.Sepal.Length.Width max.Sepal.Length max.Sepal.Width\r\n1:                4.9/2.5              7.9             3.8\r\n2:                4.9/2.4                7             3.4\r\n3:                  4.3/3              5.8             4.4\r\n   max.Petal.Length max.Petal.Width max.maxLength max.minWidth\r\n1:              6.9             2.5           7.9          0.1\r\n2:              5.1             1.8           7.9          0.1\r\n3:              1.9             0.6           7.9          0.1\r\n   max.Sepal.Length.Width\r\n1:                7.9/3.8\r\n2:                  7/3.2\r\n3:                  5/3.6\r\n\r\nHands-on 3\r\nExercise 1 - Compute the minimum, maximum, median and mean for all numeric columns\r\n\r\n\r\ndata(\"starwars\")\r\nstarwarsDT = as.data.table(starwars)\r\ncols = sapply(starwarsDT, is.numeric)\r\ncols = names(cols)[cols]\r\n\r\nstarwarsDT[, height:= as.numeric(height)]\r\n\r\nstarwarsDT[, unlist(recursive = F,\r\n                    lapply(.(min = min, max = max, median = median, mean = mean), function(f) lapply(.SD, f))), by = .(homeworld, species), .SDcols = cols]\r\n\r\n\r\n         homeworld        species min.height min.mass min.birth_year\r\n 1:       Tatooine          Human        163       NA           19.0\r\n 2:       Tatooine          Droid         97     32.0             NA\r\n 3:          Naboo          Droid         96     32.0           33.0\r\n 4:       Alderaan          Human        150       NA             NA\r\n 5:        Stewjon          Human        182     77.0           57.0\r\n 6:         Eriadu          Human        180       NA           64.0\r\n 7:       Kashyyyk        Wookiee        228    112.0             NA\r\n 8:       Corellia          Human        170     77.0           21.0\r\n 9:          Rodia         Rodian        173     74.0           44.0\r\n10:      Nal Hutta           Hutt        175   1358.0          600.0\r\n11:     Bestine IV          Human        180    110.0             NA\r\n12:           <NA> Yoda's species         66     17.0          896.0\r\n13:          Naboo          Human        157       NA             NA\r\n14:         Kamino          Human        183     78.2           31.5\r\n15:           <NA>          Droid         NA       NA             NA\r\n16:      Trandosha     Trandoshan        190    113.0           53.0\r\n17:        Socorro          Human        177     79.0           31.0\r\n18:         Bespin          Human        175     79.0           37.0\r\n19:       Mon Cala   Mon Calamari        180     83.0           41.0\r\n20:      Chandrila          Human        150       NA           48.0\r\n21:           <NA>          Human         NA       NA             NA\r\n22:          Endor           Ewok         88     20.0            8.0\r\n23:        Sullust      Sullustan        160     68.0             NA\r\n24: Cato Neimoidia      Neimodian        191     90.0             NA\r\n25:      Coruscant          Human        167       NA             NA\r\n26:          Naboo         Gungan        196       NA             NA\r\n27:          Naboo           <NA>        183       NA             NA\r\n28:       Toydaria      Toydarian        137       NA             NA\r\n29:      Malastare            Dug        112     40.0             NA\r\n30:       Dathomir         Zabrak        175     80.0           54.0\r\n31:         Ryloth        Twi'lek        178       NA             NA\r\n32:        Vulpter     Vulptereen         94     45.0             NA\r\n33:        Troiken          Xexto        122       NA             NA\r\n34:           Tund          Toong        163     65.0             NA\r\n35:     Haruun Kal          Human        188     84.0           72.0\r\n36:          Cerea         Cerean        198     82.0           92.0\r\n37:    Glee Anselm       Nautolan        196     87.0             NA\r\n38:       Iridonia         Zabrak        171       NA             NA\r\n39:      Coruscant     Tholothian        184     50.0             NA\r\n40:        Iktotch       Iktotchi        188       NA             NA\r\n41:        Quermia       Quermian        264       NA             NA\r\n42:          Dorin        Kel Dor        188     80.0           22.0\r\n43:       Champala       Chagrian        196       NA             NA\r\n44:       Geonosis      Geonosian        183     80.0             NA\r\n45:         Mirial       Mirialan        166     50.0           40.0\r\n46:        Serenno          Human        193     80.0          102.0\r\n47:   Concord Dawn          Human        183     79.0           66.0\r\n48:          Zolan       Clawdite        168     55.0             NA\r\n49:           Ojom       Besalisk        198    102.0             NA\r\n50:         Kamino       Kaminoan        213       NA             NA\r\n51:    Aleen Minor         Aleena         79     15.0             NA\r\n52:          Skako        Skakoan        193     48.0             NA\r\n53:     Muunilinst           Muun        191       NA             NA\r\n54:          Shili        Togruta        178     57.0             NA\r\n55:          Kalee        Kaleesh        216    159.0             NA\r\n56:         Umbara           <NA>        178     48.0             NA\r\n57:         Utapau         Pau'an        206     80.0             NA\r\n58:           <NA>           <NA>         NA       NA             NA\r\n         homeworld        species min.height min.mass min.birth_year\r\n    max.height max.mass max.birth_year median.height median.mass\r\n 1:        202       NA           82.0         180.5          NA\r\n 2:        167     75.0             NA         132.0        53.5\r\n 3:         96     32.0           33.0          96.0        32.0\r\n 4:        191       NA             NA         188.0          NA\r\n 5:        182     77.0           57.0         182.0        77.0\r\n 6:        180       NA           64.0         180.0          NA\r\n 7:        234    136.0             NA         231.0       124.0\r\n 8:        180     80.0           29.0         175.0        78.5\r\n 9:        173     74.0           44.0         173.0        74.0\r\n10:        175   1358.0          600.0         175.0      1358.0\r\n11:        180    110.0             NA         180.0       110.0\r\n12:         66     17.0          896.0          66.0        17.0\r\n13:        185       NA             NA         165.0          NA\r\n14:        183     78.2           31.5         183.0        78.2\r\n15:         NA       NA             NA            NA          NA\r\n16:        190    113.0           53.0         190.0       113.0\r\n17:        177     79.0           31.0         177.0        79.0\r\n18:        175     79.0           37.0         175.0        79.0\r\n19:        180     83.0           41.0         180.0        83.0\r\n20:        150       NA           48.0         150.0          NA\r\n21:         NA       NA             NA            NA          NA\r\n22:         88     20.0            8.0          88.0        20.0\r\n23:        160     68.0             NA         160.0        68.0\r\n24:        191     90.0             NA         191.0        90.0\r\n25:        170       NA             NA         168.5          NA\r\n26:        224       NA             NA         206.0          NA\r\n27:        183       NA             NA         183.0          NA\r\n28:        137       NA             NA         137.0          NA\r\n29:        112     40.0             NA         112.0        40.0\r\n30:        175     80.0           54.0         175.0        80.0\r\n31:        180       NA             NA         179.0          NA\r\n32:         94     45.0             NA          94.0        45.0\r\n33:        122       NA             NA         122.0          NA\r\n34:        163     65.0             NA         163.0        65.0\r\n35:        188     84.0           72.0         188.0        84.0\r\n36:        198     82.0           92.0         198.0        82.0\r\n37:        196     87.0             NA         196.0        87.0\r\n38:        171       NA             NA         171.0          NA\r\n39:        184     50.0             NA         184.0        50.0\r\n40:        188       NA             NA         188.0          NA\r\n41:        264       NA             NA         264.0          NA\r\n42:        188     80.0           22.0         188.0        80.0\r\n43:        196       NA             NA         196.0          NA\r\n44:        183     80.0             NA         183.0        80.0\r\n45:        170     56.2           58.0         168.0        53.1\r\n46:        193     80.0          102.0         193.0        80.0\r\n47:        183     79.0           66.0         183.0        79.0\r\n48:        168     55.0             NA         168.0        55.0\r\n49:        198    102.0             NA         198.0       102.0\r\n50:        229       NA             NA         221.0          NA\r\n51:         79     15.0             NA          79.0        15.0\r\n52:        193     48.0             NA         193.0        48.0\r\n53:        191       NA             NA         191.0          NA\r\n54:        178     57.0             NA         178.0        57.0\r\n55:        216    159.0             NA         216.0       159.0\r\n56:        178     48.0             NA         178.0        48.0\r\n57:        206     80.0             NA         206.0        80.0\r\n58:         NA       NA             NA            NA          NA\r\n    max.height max.mass max.birth_year median.height median.mass\r\n    median.birth_year mean.height mean.mass mean.birth_year\r\n 1:             44.45    179.2500        NA          47.475\r\n 2:                NA    132.0000      53.5              NA\r\n 3:             33.00     96.0000      32.0          33.000\r\n 4:                NA    176.3333        NA              NA\r\n 5:             57.00    182.0000      77.0          57.000\r\n 6:             64.00    180.0000        NA          64.000\r\n 7:                NA    231.0000     124.0              NA\r\n 8:             25.00    175.0000      78.5          25.000\r\n 9:             44.00    173.0000      74.0          44.000\r\n10:            600.00    175.0000    1358.0         600.000\r\n11:                NA    180.0000     110.0              NA\r\n12:            896.00     66.0000      17.0         896.000\r\n13:                NA    168.4000        NA              NA\r\n14:             31.50    183.0000      78.2          31.500\r\n15:                NA          NA        NA              NA\r\n16:             53.00    190.0000     113.0          53.000\r\n17:             31.00    177.0000      79.0          31.000\r\n18:             37.00    175.0000      79.0          37.000\r\n19:             41.00    180.0000      83.0          41.000\r\n20:             48.00    150.0000        NA          48.000\r\n21:                NA          NA        NA              NA\r\n22:              8.00     88.0000      20.0           8.000\r\n23:                NA    160.0000      68.0              NA\r\n24:                NA    191.0000      90.0              NA\r\n25:                NA    168.5000        NA              NA\r\n26:                NA    208.6667        NA              NA\r\n27:                NA    183.0000        NA              NA\r\n28:                NA    137.0000        NA              NA\r\n29:                NA    112.0000      40.0              NA\r\n30:             54.00    175.0000      80.0          54.000\r\n31:                NA    179.0000        NA              NA\r\n32:                NA     94.0000      45.0              NA\r\n33:                NA    122.0000        NA              NA\r\n34:                NA    163.0000      65.0              NA\r\n35:             72.00    188.0000      84.0          72.000\r\n36:             92.00    198.0000      82.0          92.000\r\n37:                NA    196.0000      87.0              NA\r\n38:                NA    171.0000        NA              NA\r\n39:                NA    184.0000      50.0              NA\r\n40:                NA    188.0000        NA              NA\r\n41:                NA    264.0000        NA              NA\r\n42:             22.00    188.0000      80.0          22.000\r\n43:                NA    196.0000        NA              NA\r\n44:                NA    183.0000      80.0              NA\r\n45:             49.00    168.0000      53.1          49.000\r\n46:            102.00    193.0000      80.0         102.000\r\n47:             66.00    183.0000      79.0          66.000\r\n48:                NA    168.0000      55.0              NA\r\n49:                NA    198.0000     102.0              NA\r\n50:                NA    221.0000        NA              NA\r\n51:                NA     79.0000      15.0              NA\r\n52:                NA    193.0000      48.0              NA\r\n53:                NA    191.0000        NA              NA\r\n54:                NA    178.0000      57.0              NA\r\n55:                NA    216.0000     159.0              NA\r\n56:                NA    178.0000      48.0              NA\r\n57:                NA    206.0000      80.0              NA\r\n58:                NA          NA        NA              NA\r\n    median.birth_year mean.height mean.mass mean.birth_year\r\n\r\nExercise 2 - all colnames to upper case\r\n\r\n\r\nstarwarsDT = as.data.table(starwars)\r\nsetnames(starwarsDT, toupper(names(starwarsDT)))\r\n\r\n\r\n\r\nConvert all character columns to upper case\r\n\r\n\r\ncols = sapply(starwarsDT, is.character)\r\ncols = names(cols)[cols]\r\nstarwarsDT[, lapply(.SD, toupper)]\r\n\r\n\r\n                     NAME HEIGHT MASS    HAIR_COLOR\r\n 1:        LUKE SKYWALKER    172   77         BLOND\r\n 2:                 C-3PO    167   75          <NA>\r\n 3:                 R2-D2     96   32          <NA>\r\n 4:           DARTH VADER    202  136          NONE\r\n 5:           LEIA ORGANA    150   49         BROWN\r\n 6:             OWEN LARS    178  120   BROWN, GREY\r\n 7:    BERU WHITESUN LARS    165   75         BROWN\r\n 8:                 R5-D4     97   32          <NA>\r\n 9:     BIGGS DARKLIGHTER    183   84         BLACK\r\n10:        OBI-WAN KENOBI    182   77 AUBURN, WHITE\r\n11:      ANAKIN SKYWALKER    188   84         BLOND\r\n12:        WILHUFF TARKIN    180 <NA>  AUBURN, GREY\r\n13:             CHEWBACCA    228  112         BROWN\r\n14:              HAN SOLO    180   80         BROWN\r\n15:                GREEDO    173   74          <NA>\r\n16: JABBA DESILIJIC TIURE    175 1358          <NA>\r\n17:        WEDGE ANTILLES    170   77         BROWN\r\n18:      JEK TONO PORKINS    180  110         BROWN\r\n19:                  YODA     66   17         WHITE\r\n20:             PALPATINE    170   75          GREY\r\n21:             BOBA FETT    183 78.2         BLACK\r\n22:                 IG-88    200  140          NONE\r\n23:                 BOSSK    190  113          NONE\r\n24:      LANDO CALRISSIAN    177   79         BLACK\r\n25:                 LOBOT    175   79          NONE\r\n26:                ACKBAR    180   83          NONE\r\n27:            MON MOTHMA    150 <NA>        AUBURN\r\n28:          ARVEL CRYNYD   <NA> <NA>         BROWN\r\n29: WICKET SYSTRI WARRICK     88   20         BROWN\r\n30:             NIEN NUNB    160   68          NONE\r\n31:          QUI-GON JINN    193   89         BROWN\r\n32:           NUTE GUNRAY    191   90          NONE\r\n33:         FINIS VALORUM    170 <NA>         BLOND\r\n34:         JAR JAR BINKS    196   66          NONE\r\n35:          ROOS TARPALS    224   82          NONE\r\n36:            RUGOR NASS    206 <NA>          NONE\r\n37:              RIC OLIÃ‰    183 <NA>         BROWN\r\n38:                 WATTO    137 <NA>         BLACK\r\n39:               SEBULBA    112   40          NONE\r\n40:         QUARSH PANAKA    183 <NA>         BLACK\r\n41:        SHMI SKYWALKER    163 <NA>         BLACK\r\n42:            DARTH MAUL    175   80          NONE\r\n43:           BIB FORTUNA    180 <NA>          NONE\r\n44:           AYLA SECURA    178   55          NONE\r\n45:              DUD BOLT     94   45          NONE\r\n46:               GASGANO    122 <NA>          NONE\r\n47:        BEN QUADINAROS    163   65          NONE\r\n48:            MACE WINDU    188   84          NONE\r\n49:          KI-ADI-MUNDI    198   82         WHITE\r\n50:             KIT FISTO    196   87          NONE\r\n51:             EETH KOTH    171 <NA>         BLACK\r\n52:            ADI GALLIA    184   50          NONE\r\n53:           SAESEE TIIN    188 <NA>          NONE\r\n54:           YARAEL POOF    264 <NA>          NONE\r\n55:              PLO KOON    188   80          NONE\r\n56:            MAS AMEDDA    196 <NA>          NONE\r\n57:          GREGAR TYPHO    185   85         BLACK\r\n58:                 CORDÃ‰    157 <NA>         BROWN\r\n59:           CLIEGG LARS    183 <NA>         BROWN\r\n60:     POGGLE THE LESSER    183   80          NONE\r\n61:       LUMINARA UNDULI    170 56.2         BLACK\r\n62:         BARRISS OFFEE    166   50         BLACK\r\n63:                 DORMÃ‰    165 <NA>         BROWN\r\n64:                 DOOKU    193   80         WHITE\r\n65:   BAIL PRESTOR ORGANA    191 <NA>         BLACK\r\n66:            JANGO FETT    183   79         BLACK\r\n67:            ZAM WESELL    168   55        BLONDE\r\n68:       DEXTER JETTSTER    198  102          NONE\r\n69:               LAMA SU    229   88          NONE\r\n70:               TAUN WE    213 <NA>          NONE\r\n71:            JOCASTA NU    167 <NA>         WHITE\r\n72:         RATTS TYERELL     79   15          NONE\r\n73:                R4-P17     96 <NA>          NONE\r\n74:            WAT TAMBOR    193   48          NONE\r\n75:              SAN HILL    191 <NA>          NONE\r\n76:              SHAAK TI    178   57          NONE\r\n77:              GRIEVOUS    216  159          NONE\r\n78:               TARFFUL    234  136         BROWN\r\n79:       RAYMUS ANTILLES    188   79         BROWN\r\n80:             SLY MOORE    178   48          NONE\r\n81:            TION MEDON    206   80          NONE\r\n82:                  FINN   <NA> <NA>         BLACK\r\n83:                   REY   <NA> <NA>         BROWN\r\n84:           POE DAMERON   <NA> <NA>         BROWN\r\n85:                   BB8   <NA> <NA>          NONE\r\n86:        CAPTAIN PHASMA   <NA> <NA>       UNKNOWN\r\n87:         PADMÃ‰ AMIDALA    165   45         BROWN\r\n                     NAME HEIGHT MASS    HAIR_COLOR\r\n             SKIN_COLOR     EYE_COLOR BIRTH_YEAR            SEX\r\n 1:                FAIR          BLUE         19           MALE\r\n 2:                GOLD        YELLOW        112           NONE\r\n 3:         WHITE, BLUE           RED         33           NONE\r\n 4:               WHITE        YELLOW       41.9           MALE\r\n 5:               LIGHT         BROWN         19         FEMALE\r\n 6:               LIGHT          BLUE         52           MALE\r\n 7:               LIGHT          BLUE         47         FEMALE\r\n 8:          WHITE, RED           RED       <NA>           NONE\r\n 9:               LIGHT         BROWN         24           MALE\r\n10:                FAIR     BLUE-GRAY         57           MALE\r\n11:                FAIR          BLUE       41.9           MALE\r\n12:                FAIR          BLUE         64           MALE\r\n13:             UNKNOWN          BLUE        200           MALE\r\n14:                FAIR         BROWN         29           MALE\r\n15:               GREEN         BLACK         44           MALE\r\n16:    GREEN-TAN, BROWN        ORANGE        600 HERMAPHRODITIC\r\n17:                FAIR         HAZEL         21           MALE\r\n18:                FAIR          BLUE       <NA>           MALE\r\n19:               GREEN         BROWN        896           MALE\r\n20:                PALE        YELLOW         82           MALE\r\n21:                FAIR         BROWN       31.5           MALE\r\n22:               METAL           RED         15           NONE\r\n23:               GREEN           RED         53           MALE\r\n24:                DARK         BROWN         31           MALE\r\n25:               LIGHT          BLUE         37           MALE\r\n26:        BROWN MOTTLE        ORANGE         41           MALE\r\n27:                FAIR          BLUE         48         FEMALE\r\n28:                FAIR         BROWN       <NA>           MALE\r\n29:               BROWN         BROWN          8           MALE\r\n30:                GREY         BLACK       <NA>           MALE\r\n31:                FAIR          BLUE         92           MALE\r\n32:       MOTTLED GREEN           RED       <NA>           MALE\r\n33:                FAIR          BLUE         91           MALE\r\n34:              ORANGE        ORANGE         52           MALE\r\n35:                GREY        ORANGE       <NA>           MALE\r\n36:               GREEN        ORANGE       <NA>           MALE\r\n37:                FAIR          BLUE       <NA>           <NA>\r\n38:          BLUE, GREY        YELLOW       <NA>           MALE\r\n39:           GREY, RED        ORANGE       <NA>           MALE\r\n40:                DARK         BROWN         62           <NA>\r\n41:                FAIR         BROWN         72         FEMALE\r\n42:                 RED        YELLOW         54           MALE\r\n43:                PALE          PINK       <NA>           MALE\r\n44:                BLUE         HAZEL         48         FEMALE\r\n45:          BLUE, GREY        YELLOW       <NA>           MALE\r\n46:         WHITE, BLUE         BLACK       <NA>           MALE\r\n47: GREY, GREEN, YELLOW        ORANGE       <NA>           MALE\r\n48:                DARK         BROWN         72           MALE\r\n49:                PALE        YELLOW         92           MALE\r\n50:               GREEN         BLACK       <NA>           MALE\r\n51:               BROWN         BROWN       <NA>           MALE\r\n52:                DARK          BLUE       <NA>         FEMALE\r\n53:                PALE        ORANGE       <NA>           MALE\r\n54:               WHITE        YELLOW       <NA>           MALE\r\n55:              ORANGE         BLACK         22           MALE\r\n56:                BLUE          BLUE       <NA>           MALE\r\n57:                DARK         BROWN       <NA>           MALE\r\n58:               LIGHT         BROWN       <NA>         FEMALE\r\n59:                FAIR          BLUE         82           MALE\r\n60:               GREEN        YELLOW       <NA>           MALE\r\n61:              YELLOW          BLUE         58         FEMALE\r\n62:              YELLOW          BLUE         40         FEMALE\r\n63:               LIGHT         BROWN       <NA>         FEMALE\r\n64:                FAIR         BROWN        102           MALE\r\n65:                 TAN         BROWN         67           MALE\r\n66:                 TAN         BROWN         66           MALE\r\n67: FAIR, GREEN, YELLOW        YELLOW       <NA>         FEMALE\r\n68:               BROWN        YELLOW       <NA>           MALE\r\n69:                GREY         BLACK       <NA>           MALE\r\n70:                GREY         BLACK       <NA>         FEMALE\r\n71:                FAIR          BLUE       <NA>         FEMALE\r\n72:          GREY, BLUE       UNKNOWN       <NA>           MALE\r\n73:         SILVER, RED     RED, BLUE       <NA>           NONE\r\n74:         GREEN, GREY       UNKNOWN       <NA>           MALE\r\n75:                GREY          GOLD       <NA>           MALE\r\n76:    RED, BLUE, WHITE         BLACK       <NA>         FEMALE\r\n77:        BROWN, WHITE GREEN, YELLOW       <NA>           MALE\r\n78:               BROWN          BLUE       <NA>           MALE\r\n79:               LIGHT         BROWN       <NA>           MALE\r\n80:                PALE         WHITE       <NA>           <NA>\r\n81:                GREY         BLACK       <NA>           MALE\r\n82:                DARK          DARK       <NA>           MALE\r\n83:               LIGHT         HAZEL       <NA>         FEMALE\r\n84:               LIGHT         BROWN       <NA>           MALE\r\n85:                NONE         BLACK       <NA>           NONE\r\n86:             UNKNOWN       UNKNOWN       <NA>           <NA>\r\n87:               LIGHT         BROWN         46         FEMALE\r\n             SKIN_COLOR     EYE_COLOR BIRTH_YEAR            SEX\r\n       GENDER      HOMEWORLD        SPECIES\r\n 1: MASCULINE       TATOOINE          HUMAN\r\n 2: MASCULINE       TATOOINE          DROID\r\n 3: MASCULINE          NABOO          DROID\r\n 4: MASCULINE       TATOOINE          HUMAN\r\n 5:  FEMININE       ALDERAAN          HUMAN\r\n 6: MASCULINE       TATOOINE          HUMAN\r\n 7:  FEMININE       TATOOINE          HUMAN\r\n 8: MASCULINE       TATOOINE          DROID\r\n 9: MASCULINE       TATOOINE          HUMAN\r\n10: MASCULINE        STEWJON          HUMAN\r\n11: MASCULINE       TATOOINE          HUMAN\r\n12: MASCULINE         ERIADU          HUMAN\r\n13: MASCULINE       KASHYYYK        WOOKIEE\r\n14: MASCULINE       CORELLIA          HUMAN\r\n15: MASCULINE          RODIA         RODIAN\r\n16: MASCULINE      NAL HUTTA           HUTT\r\n17: MASCULINE       CORELLIA          HUMAN\r\n18: MASCULINE     BESTINE IV          HUMAN\r\n19: MASCULINE           <NA> YODA'S SPECIES\r\n20: MASCULINE          NABOO          HUMAN\r\n21: MASCULINE         KAMINO          HUMAN\r\n22: MASCULINE           <NA>          DROID\r\n23: MASCULINE      TRANDOSHA     TRANDOSHAN\r\n24: MASCULINE        SOCORRO          HUMAN\r\n25: MASCULINE         BESPIN          HUMAN\r\n26: MASCULINE       MON CALA   MON CALAMARI\r\n27:  FEMININE      CHANDRILA          HUMAN\r\n28: MASCULINE           <NA>          HUMAN\r\n29: MASCULINE          ENDOR           EWOK\r\n30: MASCULINE        SULLUST      SULLUSTAN\r\n31: MASCULINE           <NA>          HUMAN\r\n32: MASCULINE CATO NEIMOIDIA      NEIMODIAN\r\n33: MASCULINE      CORUSCANT          HUMAN\r\n34: MASCULINE          NABOO         GUNGAN\r\n35: MASCULINE          NABOO         GUNGAN\r\n36: MASCULINE          NABOO         GUNGAN\r\n37:      <NA>          NABOO           <NA>\r\n38: MASCULINE       TOYDARIA      TOYDARIAN\r\n39: MASCULINE      MALASTARE            DUG\r\n40:      <NA>          NABOO           <NA>\r\n41:  FEMININE       TATOOINE          HUMAN\r\n42: MASCULINE       DATHOMIR         ZABRAK\r\n43: MASCULINE         RYLOTH        TWI'LEK\r\n44:  FEMININE         RYLOTH        TWI'LEK\r\n45: MASCULINE        VULPTER     VULPTEREEN\r\n46: MASCULINE        TROIKEN          XEXTO\r\n47: MASCULINE           TUND          TOONG\r\n48: MASCULINE     HARUUN KAL          HUMAN\r\n49: MASCULINE          CEREA         CEREAN\r\n50: MASCULINE    GLEE ANSELM       NAUTOLAN\r\n51: MASCULINE       IRIDONIA         ZABRAK\r\n52:  FEMININE      CORUSCANT     THOLOTHIAN\r\n53: MASCULINE        IKTOTCH       IKTOTCHI\r\n54: MASCULINE        QUERMIA       QUERMIAN\r\n55: MASCULINE          DORIN        KEL DOR\r\n56: MASCULINE       CHAMPALA       CHAGRIAN\r\n57: MASCULINE          NABOO          HUMAN\r\n58:  FEMININE          NABOO          HUMAN\r\n59: MASCULINE       TATOOINE          HUMAN\r\n60: MASCULINE       GEONOSIS      GEONOSIAN\r\n61:  FEMININE         MIRIAL       MIRIALAN\r\n62:  FEMININE         MIRIAL       MIRIALAN\r\n63:  FEMININE          NABOO          HUMAN\r\n64: MASCULINE        SERENNO          HUMAN\r\n65: MASCULINE       ALDERAAN          HUMAN\r\n66: MASCULINE   CONCORD DAWN          HUMAN\r\n67:  FEMININE          ZOLAN       CLAWDITE\r\n68: MASCULINE           OJOM       BESALISK\r\n69: MASCULINE         KAMINO       KAMINOAN\r\n70:  FEMININE         KAMINO       KAMINOAN\r\n71:  FEMININE      CORUSCANT          HUMAN\r\n72: MASCULINE    ALEEN MINOR         ALEENA\r\n73:  FEMININE           <NA>          DROID\r\n74: MASCULINE          SKAKO        SKAKOAN\r\n75: MASCULINE     MUUNILINST           MUUN\r\n76:  FEMININE          SHILI        TOGRUTA\r\n77: MASCULINE          KALEE        KALEESH\r\n78: MASCULINE       KASHYYYK        WOOKIEE\r\n79: MASCULINE       ALDERAAN          HUMAN\r\n80:      <NA>         UMBARA           <NA>\r\n81: MASCULINE         UTAPAU         PAU'AN\r\n82: MASCULINE           <NA>          HUMAN\r\n83:  FEMININE           <NA>          HUMAN\r\n84: MASCULINE           <NA>          HUMAN\r\n85: MASCULINE           <NA>          DROID\r\n86:      <NA>           <NA>           <NA>\r\n87:  FEMININE          NABOO          HUMAN\r\n       GENDER      HOMEWORLD        SPECIES\r\n                                                                                                                                                         FILMS\r\n 1:                                               C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n 2:                      C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n 3: C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n 4:                                                                    C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n 5:                                               C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n 6:                                                                                             C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\", \"A NEW HOPE\")\r\n 7:                                                                                             C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\", \"A NEW HOPE\")\r\n 8:                                                                                                                                                 A NEW HOPE\r\n 9:                                                                                                                                                 A NEW HOPE\r\n10:                      C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n11:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n12:                                                                                                                     C(\"REVENGE OF THE SITH\", \"A NEW HOPE\")\r\n13:                                               C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n14:                                                                      C(\"THE EMPIRE STRIKES BACK\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n15:                                                                                                                                                 A NEW HOPE\r\n16:                                                                                                C(\"THE PHANTOM MENACE\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n17:                                                                                           C(\"THE EMPIRE STRIKES BACK\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n18:                                                                                                                                                 A NEW HOPE\r\n19:                                    C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\")\r\n20:                                    C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\")\r\n21:                                                                                 C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"RETURN OF THE JEDI\")\r\n22:                                                                                                                                    THE EMPIRE STRIKES BACK\r\n23:                                                                                                                                    THE EMPIRE STRIKES BACK\r\n24:                                                                                                         C(\"THE EMPIRE STRIKES BACK\", \"RETURN OF THE JEDI\")\r\n25:                                                                                                                                    THE EMPIRE STRIKES BACK\r\n26:                                                                                                               C(\"RETURN OF THE JEDI\", \"THE FORCE AWAKENS\")\r\n27:                                                                                                                                         RETURN OF THE JEDI\r\n28:                                                                                                                                         RETURN OF THE JEDI\r\n29:                                                                                                                                         RETURN OF THE JEDI\r\n30:                                                                                                                                         RETURN OF THE JEDI\r\n31:                                                                                                                                         THE PHANTOM MENACE\r\n32:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n33:                                                                                                                                         THE PHANTOM MENACE\r\n34:                                                                                                            C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\")\r\n35:                                                                                                                                         THE PHANTOM MENACE\r\n36:                                                                                                                                         THE PHANTOM MENACE\r\n37:                                                                                                                                         THE PHANTOM MENACE\r\n38:                                                                                                            C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\")\r\n39:                                                                                                                                         THE PHANTOM MENACE\r\n40:                                                                                                                                         THE PHANTOM MENACE\r\n41:                                                                                                            C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\")\r\n42:                                                                                                                                         THE PHANTOM MENACE\r\n43:                                                                                                                                         RETURN OF THE JEDI\r\n44:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n45:                                                                                                                                         THE PHANTOM MENACE\r\n46:                                                                                                                                         THE PHANTOM MENACE\r\n47:                                                                                                                                         THE PHANTOM MENACE\r\n48:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n49:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n50:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n51:                                                                                                             C(\"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n52:                                                                                                             C(\"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n53:                                                                                                             C(\"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n54:                                                                                                                                         THE PHANTOM MENACE\r\n55:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n56:                                                                                                            C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\")\r\n57:                                                                                                                                       ATTACK OF THE CLONES\r\n58:                                                                                                                                       ATTACK OF THE CLONES\r\n59:                                                                                                                                       ATTACK OF THE CLONES\r\n60:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n61:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n62:                                                                                                                                       ATTACK OF THE CLONES\r\n63:                                                                                                                                       ATTACK OF THE CLONES\r\n64:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n65:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n66:                                                                                                                                       ATTACK OF THE CLONES\r\n67:                                                                                                                                       ATTACK OF THE CLONES\r\n68:                                                                                                                                       ATTACK OF THE CLONES\r\n69:                                                                                                                                       ATTACK OF THE CLONES\r\n70:                                                                                                                                       ATTACK OF THE CLONES\r\n71:                                                                                                                                       ATTACK OF THE CLONES\r\n72:                                                                                                                                         THE PHANTOM MENACE\r\n73:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n74:                                                                                                                                       ATTACK OF THE CLONES\r\n75:                                                                                                                                       ATTACK OF THE CLONES\r\n76:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n77:                                                                                                                                        REVENGE OF THE SITH\r\n78:                                                                                                                                        REVENGE OF THE SITH\r\n79:                                                                                                                     C(\"REVENGE OF THE SITH\", \"A NEW HOPE\")\r\n80:                                                                                                           C(\"ATTACK OF THE CLONES\", \"REVENGE OF THE SITH\")\r\n81:                                                                                                                                        REVENGE OF THE SITH\r\n82:                                                                                                                                          THE FORCE AWAKENS\r\n83:                                                                                                                                          THE FORCE AWAKENS\r\n84:                                                                                                                                          THE FORCE AWAKENS\r\n85:                                                                                                                                          THE FORCE AWAKENS\r\n86:                                                                                                                                          THE FORCE AWAKENS\r\n87:                                                                                     C(\"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\")\r\n                                                                                                                                                         FILMS\r\n                                       VEHICLES\r\n 1:   C(\"SNOWSPEEDER\", \"IMPERIAL SPEEDER BIKE\")\r\n 2:                                CHARACTER(0)\r\n 3:                                CHARACTER(0)\r\n 4:                                CHARACTER(0)\r\n 5:                       IMPERIAL SPEEDER BIKE\r\n 6:                                CHARACTER(0)\r\n 7:                                CHARACTER(0)\r\n 8:                                CHARACTER(0)\r\n 9:                                CHARACTER(0)\r\n10:                             TRIBUBBLE BONGO\r\n11: C(\"ZEPHYR-G SWOOP BIKE\", \"XJ-6 AIRSPEEDER\")\r\n12:                                CHARACTER(0)\r\n13:                                       AT-ST\r\n14:                                CHARACTER(0)\r\n15:                                CHARACTER(0)\r\n16:                                CHARACTER(0)\r\n17:                                 SNOWSPEEDER\r\n18:                                CHARACTER(0)\r\n19:                                CHARACTER(0)\r\n20:                                CHARACTER(0)\r\n21:                                CHARACTER(0)\r\n22:                                CHARACTER(0)\r\n23:                                CHARACTER(0)\r\n24:                                CHARACTER(0)\r\n25:                                CHARACTER(0)\r\n26:                                CHARACTER(0)\r\n27:                                CHARACTER(0)\r\n28:                                CHARACTER(0)\r\n29:                                CHARACTER(0)\r\n30:                                CHARACTER(0)\r\n31:                             TRIBUBBLE BONGO\r\n32:                                CHARACTER(0)\r\n33:                                CHARACTER(0)\r\n34:                                CHARACTER(0)\r\n35:                                CHARACTER(0)\r\n36:                                CHARACTER(0)\r\n37:                                CHARACTER(0)\r\n38:                                CHARACTER(0)\r\n39:                                CHARACTER(0)\r\n40:                                CHARACTER(0)\r\n41:                                CHARACTER(0)\r\n42:                                SITH SPEEDER\r\n43:                                CHARACTER(0)\r\n44:                                CHARACTER(0)\r\n45:                                CHARACTER(0)\r\n46:                                CHARACTER(0)\r\n47:                                CHARACTER(0)\r\n48:                                CHARACTER(0)\r\n49:                                CHARACTER(0)\r\n50:                                CHARACTER(0)\r\n51:                                CHARACTER(0)\r\n52:                                CHARACTER(0)\r\n53:                                CHARACTER(0)\r\n54:                                CHARACTER(0)\r\n55:                                CHARACTER(0)\r\n56:                                CHARACTER(0)\r\n57:                                CHARACTER(0)\r\n58:                                CHARACTER(0)\r\n59:                                CHARACTER(0)\r\n60:                                CHARACTER(0)\r\n61:                                CHARACTER(0)\r\n62:                                CHARACTER(0)\r\n63:                                CHARACTER(0)\r\n64:                            FLITKNOT SPEEDER\r\n65:                                CHARACTER(0)\r\n66:                                CHARACTER(0)\r\n67:                  KORO-2 EXODRIVE AIRSPEEDER\r\n68:                                CHARACTER(0)\r\n69:                                CHARACTER(0)\r\n70:                                CHARACTER(0)\r\n71:                                CHARACTER(0)\r\n72:                                CHARACTER(0)\r\n73:                                CHARACTER(0)\r\n74:                                CHARACTER(0)\r\n75:                                CHARACTER(0)\r\n76:                                CHARACTER(0)\r\n77:                 TSMEU-6 PERSONAL WHEEL BIKE\r\n78:                                CHARACTER(0)\r\n79:                                CHARACTER(0)\r\n80:                                CHARACTER(0)\r\n81:                                CHARACTER(0)\r\n82:                                CHARACTER(0)\r\n83:                                CHARACTER(0)\r\n84:                                CHARACTER(0)\r\n85:                                CHARACTER(0)\r\n86:                                CHARACTER(0)\r\n87:                                CHARACTER(0)\r\n                                       VEHICLES\r\n                                                                                                                STARSHIPS\r\n 1:                                                                                       C(\"X-WING\", \"IMPERIAL SHUTTLE\")\r\n 2:                                                                                                          CHARACTER(0)\r\n 3:                                                                                                          CHARACTER(0)\r\n 4:                                                                                                       TIE ADVANCED X1\r\n 5:                                                                                                          CHARACTER(0)\r\n 6:                                                                                                          CHARACTER(0)\r\n 7:                                                                                                          CHARACTER(0)\r\n 8:                                                                                                          CHARACTER(0)\r\n 9:                                                                                                                X-WING\r\n10: C(\"JEDI STARFIGHTER\", \"TRADE FEDERATION CRUISER\", \"NABOO STAR SKIFF\", \"JEDI INTERCEPTOR\", \"BELBULLAB-22 STARFIGHTER\")\r\n11:                                                    C(\"TRADE FEDERATION CRUISER\", \"JEDI INTERCEPTOR\", \"NABOO FIGHTER\")\r\n12:                                                                                                          CHARACTER(0)\r\n13:                                                                            C(\"MILLENNIUM FALCON\", \"IMPERIAL SHUTTLE\")\r\n14:                                                                            C(\"MILLENNIUM FALCON\", \"IMPERIAL SHUTTLE\")\r\n15:                                                                                                          CHARACTER(0)\r\n16:                                                                                                          CHARACTER(0)\r\n17:                                                                                                                X-WING\r\n18:                                                                                                                X-WING\r\n19:                                                                                                          CHARACTER(0)\r\n20:                                                                                                          CHARACTER(0)\r\n21:                                                                                                               SLAVE 1\r\n22:                                                                                                          CHARACTER(0)\r\n23:                                                                                                          CHARACTER(0)\r\n24:                                                                                                     MILLENNIUM FALCON\r\n25:                                                                                                          CHARACTER(0)\r\n26:                                                                                                          CHARACTER(0)\r\n27:                                                                                                          CHARACTER(0)\r\n28:                                                                                                                A-WING\r\n29:                                                                                                          CHARACTER(0)\r\n30:                                                                                                     MILLENNIUM FALCON\r\n31:                                                                                                          CHARACTER(0)\r\n32:                                                                                                          CHARACTER(0)\r\n33:                                                                                                          CHARACTER(0)\r\n34:                                                                                                          CHARACTER(0)\r\n35:                                                                                                          CHARACTER(0)\r\n36:                                                                                                          CHARACTER(0)\r\n37:                                                                                                  NABOO ROYAL STARSHIP\r\n38:                                                                                                          CHARACTER(0)\r\n39:                                                                                                          CHARACTER(0)\r\n40:                                                                                                          CHARACTER(0)\r\n41:                                                                                                          CHARACTER(0)\r\n42:                                                                                                              SCIMITAR\r\n43:                                                                                                          CHARACTER(0)\r\n44:                                                                                                          CHARACTER(0)\r\n45:                                                                                                          CHARACTER(0)\r\n46:                                                                                                          CHARACTER(0)\r\n47:                                                                                                          CHARACTER(0)\r\n48:                                                                                                          CHARACTER(0)\r\n49:                                                                                                          CHARACTER(0)\r\n50:                                                                                                          CHARACTER(0)\r\n51:                                                                                                          CHARACTER(0)\r\n52:                                                                                                          CHARACTER(0)\r\n53:                                                                                                          CHARACTER(0)\r\n54:                                                                                                          CHARACTER(0)\r\n55:                                                                                                      JEDI STARFIGHTER\r\n56:                                                                                                          CHARACTER(0)\r\n57:                                                                                                         NABOO FIGHTER\r\n58:                                                                                                          CHARACTER(0)\r\n59:                                                                                                          CHARACTER(0)\r\n60:                                                                                                          CHARACTER(0)\r\n61:                                                                                                          CHARACTER(0)\r\n62:                                                                                                          CHARACTER(0)\r\n63:                                                                                                          CHARACTER(0)\r\n64:                                                                                                          CHARACTER(0)\r\n65:                                                                                                          CHARACTER(0)\r\n66:                                                                                                          CHARACTER(0)\r\n67:                                                                                                          CHARACTER(0)\r\n68:                                                                                                          CHARACTER(0)\r\n69:                                                                                                          CHARACTER(0)\r\n70:                                                                                                          CHARACTER(0)\r\n71:                                                                                                          CHARACTER(0)\r\n72:                                                                                                          CHARACTER(0)\r\n73:                                                                                                          CHARACTER(0)\r\n74:                                                                                                          CHARACTER(0)\r\n75:                                                                                                          CHARACTER(0)\r\n76:                                                                                                          CHARACTER(0)\r\n77:                                                                                              BELBULLAB-22 STARFIGHTER\r\n78:                                                                                                          CHARACTER(0)\r\n79:                                                                                                          CHARACTER(0)\r\n80:                                                                                                          CHARACTER(0)\r\n81:                                                                                                          CHARACTER(0)\r\n82:                                                                                                          CHARACTER(0)\r\n83:                                                                                                          CHARACTER(0)\r\n84:                                                                                                   T-70 X-WING FIGHTER\r\n85:                                                                                                          CHARACTER(0)\r\n86:                                                                                                          CHARACTER(0)\r\n87:                                                         C(\"H-TYPE NUBIAN YACHT\", \"NABOO STAR SKIFF\", \"NABOO FIGHTER\")\r\n                                                                                                                STARSHIPS\r\n\r\nExercise 3\r\nRemove the data which have NA for the numeric variables\r\nGroup the data by all character variables\r\nCompute the mean for ts_diameter and hu_diameter\r\n\r\n\r\nstormsDT <- as.data.table(storms)\r\nnumericCols = sapply(stormsDT, is.numeric)\r\nnumericCols = names(numericCols)[numericCols]\r\nstormsDTNew <- na.omit(stormsDT, cols = numericCols)\r\ncharacterCols <- sapply(stormsDTNew, is.character)\r\ncharacterCols <- names(characterCols)[characterCols]\r\ncolsOfInterest <- c(\"ts_diameter\", \"hu_diameter\")\r\nstormsDTNew[, lapply(.SD, mean), .SDcols = colsOfInterest, by = characterCols]\r\n\r\n\r\n        name              status ts_diameter hu_diameter\r\n  1:    Alex tropical depression     0.00000     0.00000\r\n  2:    Alex      tropical storm   150.80013     0.00000\r\n  3:    Alex           hurricane   304.40871    63.56690\r\n  4:  Bonnie tropical depression     0.00000     0.00000\r\n  5:  Bonnie      tropical storm    75.40637     0.00000\r\n ---                                                    \r\n273: Joaquin      tropical storm   198.92054     0.00000\r\n274: Joaquin           hurricane   332.98376    85.00923\r\n275:    Kate tropical depression     0.00000     0.00000\r\n276:    Kate      tropical storm    85.48651     0.00000\r\n277:    Kate           hurricane   273.31025    31.64645\r\n\r\n.SD: Subset of data - choose row by ordinal position\r\n\r\n\r\nirisDT[, .SD[1L]]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:            6         2.2            5         1.5 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1              6/2.2\r\n\r\nirisDT[, .SD[1L], by = Species]\r\n\r\n\r\n      Species Sepal.Length Sepal.Width Petal.Length Petal.Width\r\n1:  virginica            6         2.2          5.0         1.5\r\n2: versicolor            5           2          3.5         1.0\r\n3:     setosa          4.5         2.3          1.3         0.3\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1              6/2.2\r\n2:       7.9      0.1                5/2\r\n3:       7.9      0.1            4.5/2.3\r\n\r\nirisDT[, .SD[1L], by = Species, .SDcols = c(\"Petal.Length\", \"Petal.Width\")]\r\n\r\n\r\n      Species Petal.Length Petal.Width\r\n1:  virginica          5.0         1.5\r\n2: versicolor          3.5         1.0\r\n3:     setosa          1.3         0.3\r\n\r\n.SD: Subset of Data - select top entries (in each group)\r\n\r\n\r\nirisDT[order(-Sepal.Length), .SD[1:2]]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          7.9         3.8          6.4         2.0 virginica\r\n2:          7.7         2.6          6.9         2.3 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1            7.9/3.8\r\n2:       7.9      0.1            7.7/2.6\r\n\r\nirisDT[, .SD[which.max(Sepal.Length)], by = Species, .SDcols = c(\"Sepal.Length\",\"Sepal.Width\")]\r\n\r\n\r\n      Species Sepal.Length Sepal.Width\r\n1:  virginica          7.9         3.8\r\n2: versicolor            7         3.2\r\n3:     setosa          5.8           4\r\n\r\nMultiple if else statements\r\n\r\n\r\nirisDT[, text := {\r\n  if(Sepal.Length > 4 & Sepal.Width > 4) \"sepal length and width is larger than 4\"\r\n  else if(Petal.Length < 2 & Petal.Width < 2) \"petal length and width is smaller than 2\"\r\n  else \"other\"\r\n}, by = .(Species, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)][, .SD[1], by = text]\r\n\r\n\r\n                                       text Sepal.Length Sepal.Width\r\n1:                                    other            6         2.2\r\n2: petal length and width is smaller than 2          4.5         2.3\r\n3:  sepal length and width is larger than 4          5.2         4.1\r\n   Petal.Length Petal.Width   Species maxLength minWidth\r\n1:          5.0         1.5 virginica       7.9      0.1\r\n2:          1.3         0.3    setosa       7.9      0.1\r\n3:          1.5         0.1    setosa       7.9      0.1\r\n   Sepal.Length.Width\r\n1:              6/2.2\r\n2:            4.5/2.3\r\n3:            5.2/4.1\r\n\r\n\r\n\r\nbin_iris <- function(sl, sw, pl, pw){\r\n  if(sl > 4 & sw > 4) \"sepal length and width is larger than 4\"\r\n  else if(pl < 2 & pw < 2) \"petal length and width is smaller than 2\"\r\n  else \"other\"\r\n}\r\nirisDT[, text := bin_iris(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width), \r\n       by = .(Species, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)][, .SD[1], by = text]\r\n\r\n\r\n                                       text Sepal.Length Sepal.Width\r\n1:                                    other            6         2.2\r\n2: petal length and width is smaller than 2          4.5         2.3\r\n3:  sepal length and width is larger than 4          5.2         4.1\r\n   Petal.Length Petal.Width   Species maxLength minWidth\r\n1:          5.0         1.5 virginica       7.9      0.1\r\n2:          1.3         0.3    setosa       7.9      0.1\r\n3:          1.5         0.1    setosa       7.9      0.1\r\n   Sepal.Length.Width\r\n1:              6/2.2\r\n2:            4.5/2.3\r\n3:            5.2/4.1\r\n\r\nHands - on 4\r\nExercise 1\r\nPrint the fifth row for each species.\r\n\r\n\r\nstarwarsDT <- as.data.table(starwars)\r\nstarwarsDT[, if(.N >= 5) .SD[5L], by = species]\r\n\r\n\r\n   species               name height mass hair_color  skin_color\r\n1:   Human Beru Whitesun lars    165   75      brown       light\r\n2:   Droid             R4-P17     96   NA       none silver, red\r\n   eye_color birth_year    sex   gender homeworld\r\n1:      blue         47 female feminine  Tatooine\r\n2: red, blue         NA   none feminine      <NA>\r\n                                                 films vehicles\r\n1: Attack of the Clones,Revenge of the Sith,A New Hope         \r\n2:            Attack of the Clones,Revenge of the Sith         \r\n   starships\r\n1:          \r\n2:          \r\n\r\nExercise 2\r\nConsider the columns name, status and pressure.\r\nPrint for each storm, the 5 entries with the lowest pressure.\r\n\r\n\r\nstormsDT <- as.data.table(storms)\r\nstormsDT[, .(name, status, pressure)][order(name, pressure)][, .SD[1:min(5, .N)], by = name]\r\n\r\n\r\n         name              status pressure\r\n  1: AL011993 tropical depression      999\r\n  2: AL011993 tropical depression      999\r\n  3: AL011993 tropical depression      999\r\n  4: AL011993 tropical depression      999\r\n  5: AL011993 tropical depression     1000\r\n ---                                      \r\n978:     Zeta      tropical storm      994\r\n979:     Zeta      tropical storm      994\r\n980:     Zeta      tropical storm      994\r\n981:     Zeta      tropical storm      994\r\n982:     Zeta      tropical storm      994\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2020-12-04T14:49:40+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-04-data-munging-withdatatable/",
    "title": "data munging with data.table",
    "description": "A quick glimpse into data.table for data manipulation.",
    "author": [
      {
        "name": "Basil Okola",
        "url": "https://github.com/Bokola"
      }
    ],
    "date": "2020-12-04",
    "categories": [
      "Data manipulation"
    ],
    "contents": "\r\n\r\nData table syntax is of the form DT[i, j, by]\r\ni: on which row\r\nj: what to do\r\nby: group by what\r\nData Manipulation\r\nJust looking\r\nRemoving information\r\nAdding information\r\nReducing information\r\nCombining information\r\nJust looking\r\n\r\n\r\nirisDT = as.data.table(iris)\r\n#tables()# show loaded tables\r\n\r\n\r\n\r\nSorting / ordering rows\r\nsetorder(data.table, â€¦)\r\n-: to sort a variable in descending order\r\n\r\n\r\nsetorder(irisDT, Sepal.Length, Sepal.Width)\r\nirisDT[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width Species\r\n1:          4.3         3.0          1.1         0.1  setosa\r\n2:          4.4         2.9          1.4         0.2  setosa\r\n3:          4.4         3.0          1.3         0.2  setosa\r\n4:          4.4         3.2          1.3         0.2  setosa\r\n5:          4.5         2.3          1.3         0.3  setosa\r\n\r\n\r\n\r\nsetorder(irisDT, -Species, Sepal.Width)\r\nirisDT[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          6.0         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n\r\nRemoving information\r\nSelecting rows\r\nDT[i, j, by]\r\ni: on which rows?\r\n\r\n\r\nirisDT[3:4]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          5.7         2.5            5         2.0 virginica\r\n2:          6.3         2.5            5         1.9 virginica\r\n\r\n\r\n\r\n# irisDT[3:4,] #row 3 and 4\r\n# irisDT[-(1:5)] #delete rows 1:5\r\n# irisDT[!(1:5)] # using false to delete as well\r\n# irisDT[.N] # last row\r\n# irisDT[1:(.N-10)] # all but the last 10 rows\r\n# irisDT[Species == \"virginica\"] # based on conditions fulfilled in columns\r\nirisDT[Species %like% \"^v\"][1:5]# using %like% helper function\r\nirisDT[Petal.Width %between% c(0.3, 0.4)][1:5]# values in an interval\r\n\r\n\r\n\r\nSelecting columns\r\nDT[i, j, by]\r\nj: what to do? -> select columns\r\n\r\n\r\nirisDT[, Species][1:5] # returns a vector\r\nirisDT[, \"Species\"][1:5] # returns a dataframe/data.table\r\nirisDT[, -c(\"Species\")]\r\nirisDT[, !c(\"Species\")]\r\nirisDT[, list(Species, LS = Sepal.Length)] # select and rename\r\n# .() is an alias for list\r\n\r\nirisDT[, .(Species, SL = Sepal.Length)]\r\nirisDT[Species == \"virginica\" & Sepal.Length > 7 & Sepal.Width < 3, !c(\"Species\")]\r\nirisDT[Species == \"virginica\" &\r\nSepal.Length > 7 &Sepal.Width < 3,.(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)]\r\n\r\n\r\n\r\nAdding information\r\nMaking new columns - preserving existing ones\r\nDT[i, j, by]\r\nj: what to do? -> compute new columns preserving existing ones\r\ndata.table uses a new operator := to add/update/delete columns (by reference)\r\noption 1\r\n\r\n\r\nirisDT[, maxLength := max(Sepal.Length, Petal.Length)][,\r\n          minWidth := min(Sepal.Length, Petal.Width)]\r\nirisDT[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          6.0         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth\r\n1:       7.9      0.1\r\n2:       7.9      0.1\r\n3:       7.9      0.1\r\n4:       7.9      0.1\r\n5:       7.9      0.1\r\n\r\noption 2\r\nLHS := RHS form\r\n\r\n\r\nirisDT[, c(\"maxLength\", \"minWidth\") :=\r\n         list(\r\n           max(Sepal.Length, Petal.Length),\r\n           min(Sepal.Width, Petal.Width)\r\n         )]\r\n\r\nirisDT[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          6.0         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth\r\n1:       7.9      0.1\r\n2:       7.9      0.1\r\n3:       7.9      0.1\r\n4:       7.9      0.1\r\n5:       7.9      0.1\r\n\r\nOption 3\r\nFunctional form\r\n\r\n\r\nirisDT[, `:=` (\r\n  maxLength = max(Sepal.Length, Petal.Length),\r\n  minWidth = min(Sepal.Width, Petal.Width)\r\n)]\r\nirisDT[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          6.0         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth\r\n1:       7.9      0.1\r\n2:       7.9      0.1\r\n3:       7.9      0.1\r\n4:       7.9      0.1\r\n5:       7.9      0.1\r\n\r\nMaking new columns - dropping existing ones\r\nDT[i, j, by]\r\nj: what to do? -> compute new columns dropping existing ones\r\n\r\n\r\nirisDT[, .(maxLength = pmax(Sepal.Length, Petal.Length),\r\nminWidth = pmin(Sepal.Width, Petal.Width))][1:5]\r\n\r\n\r\n   maxLength minWidth\r\n1:       6.0      1.5\r\n2:       4.9      1.7\r\n3:       5.7      2.0\r\n4:       6.3      1.9\r\n5:       6.7      1.8\r\n\r\n\r\n\r\nnewIris <- irisDT[, .(Sepal.Area = Sepal.Width * Sepal.Length,\r\nPetal.Area = Petal.Width * Petal.Length)]\r\nnewIris[, Area.Ratio := Petal.Area / Sepal.Area]\r\nnewIris[1:5]\r\n\r\n\r\n   Sepal.Area Petal.Area Area.Ratio\r\n1:      13.20       7.50  0.5681818\r\n2:      12.25       7.65  0.6244898\r\n3:      14.25      10.00  0.7017544\r\n4:      15.75       9.50  0.6031746\r\n5:      16.75      10.44  0.6232836\r\n\r\nReducing information\r\nSummarizing rows\r\n\r\n\r\nirisDT[, .(meanSepalLength = mean(Sepal.Length),\r\n           meanSepalWidth = mean(Sepal.Width),\r\n           meanPetalLength = mean(Petal.Length),\r\n           meanPetalWidth = mean(Petal.Width))]\r\n\r\n\r\n   meanSepalLength meanSepalWidth meanPetalLength meanPetalWidth\r\n1:        5.843333       3.057333           3.758       1.199333\r\n\r\n\r\n\r\nirisDT[, .(nSamples = .N, nSpecies = uniqueN(Species))\r\n       ]\r\n\r\n\r\n   nSamples nSpecies\r\n1:      150        3\r\n\r\nSummarizing rows with filtering\r\n\r\n\r\nirisDT[Species == \"versicolor\",.(\r\n  meanSepalLength = mean(Sepal.Length),\r\n           meanSepalWidth = mean(Sepal.Width),\r\n           meanPetalLength = mean(Petal.Length),\r\n           meanPetalWidth = mean(Petal.Width)\r\n)]\r\n\r\n\r\n   meanSepalLength meanSepalWidth meanPetalLength meanPetalWidth\r\n1:           5.936           2.77            4.26          1.326\r\n\r\nGrouping by one or more variables\r\n\r\n\r\nirisDT[, .(meanSepalLength = mean(Sepal.Length),\r\nmeanSepalWidth = mean(Sepal.Width),\r\nmeanPetalLength = mean(Petal.Length),\r\nmeanPetalWidth = mean(Petal.Width)), by = \"Species\"]\r\n\r\n\r\n      Species meanSepalLength meanSepalWidth meanPetalLength\r\n1:  virginica           6.588          2.974           5.552\r\n2: versicolor           5.936          2.770           4.260\r\n3:     setosa           5.006          3.428           1.462\r\n   meanPetalWidth\r\n1:          2.026\r\n2:          1.326\r\n3:          0.246\r\n\r\n\r\n\r\nirisDT[, .(nSamples = .N, nSpecies = uniqueN(Species)), by = .(Species)]\r\n\r\n\r\n      Species nSamples nSpecies\r\n1:  virginica       50        1\r\n2: versicolor       50        1\r\n3:     setosa       50        1\r\n\r\nCombining information\r\njoining 2 data.tables\r\nInner join: return all rows from x where there are matching values in y and all columns from x and y. In case of multiple matches between x and y, all combinations of the matches are returned.\r\nFull join: return all rows and columns from both x and y. \r\nLeft join: return all rows from x and all columns from x and y. In case of multiple matches between x and y, all combinations of the matches are returned.\r\nRight join: return all rows from y and all columns from x and y. In case of multiple matches between x and y, all combinations of the matches are returned.\r\nDT[i, on]\r\ni: join to which data.table?\r\non: join key columns?\r\n\r\n\r\n(x <- data.table(id = c(1, 2, 4, 5, 6),\r\nx = c(9, 12, 14, 21, 8)))\r\n\r\n\r\n   id  x\r\n1:  1  9\r\n2:  2 12\r\n3:  4 14\r\n4:  5 21\r\n5:  6  8\r\n\r\n(y <- data.table(id = c(1, 3, 4, 6, 6),\r\ny = c(8, 14, 19, 2, 4)))\r\n\r\n\r\n   id  y\r\n1:  1  8\r\n2:  3 14\r\n3:  4 19\r\n4:  6  2\r\n5:  6  4\r\n\r\ninner join - data.table\r\n\r\n\r\ny[x, on = .(id), nomatch = 0]\r\n\r\n\r\n   id  y  x\r\n1:  1  8  9\r\n2:  4 19 14\r\n3:  6  2  8\r\n4:  6  4  8\r\n\r\nfull join - merge\r\n\r\n\r\nmerge.data.table(x = x, y = y, by = \"id\", all = TRUE)\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  2 12 NA\r\n3:  3 NA 14\r\n4:  4 14 19\r\n5:  5 21 NA\r\n6:  6  8  2\r\n7:  6  8  4\r\n\r\nleft join - merge\r\n\r\n\r\nmerge.data.table(x = x, y = y, by = \"id\", all.x = TRUE)\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  2 12 NA\r\n3:  4 14 19\r\n4:  5 21 NA\r\n5:  6  8  2\r\n6:  6  8  4\r\n\r\nleft join - data.table\r\n\r\n\r\ny[x, on = .(id)]\r\n\r\n\r\n   id  y  x\r\n1:  1  8  9\r\n2:  2 NA 12\r\n3:  4 19 14\r\n4:  5 NA 21\r\n5:  6  2  8\r\n6:  6  4  8\r\n\r\nright join - merge\r\n\r\n\r\ndata.table::merge.data.table(x = x, y = y, by = \"id\", all.y = T)\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  3 NA 14\r\n3:  4 14 19\r\n4:  6  8  2\r\n5:  6  8  4\r\n\r\nright jpin - data.table\r\n\r\n\r\nx[y, on = .(id)]\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  3 NA 14\r\n3:  4 14 19\r\n4:  6  8  2\r\n5:  6  8  4\r\n\r\nantijoin - data.table\r\n\r\n\r\nx[!y, on = .(id)]\r\n\r\n\r\n   id  x\r\n1:  2 12\r\n2:  5 21\r\n\r\nKeys\r\nNo need of the on argument when performing a join\r\nSorts the data.table in memory by the key column(s)\r\nMultiple columns can be set and used as keys\r\nUseful functions:\r\nsetkey(DT, â€¦) or setkeyv(DT, keys)\r\nhaskey(DT)\r\nkey(DT\r\n\r\n\r\nsetkey(x, id)\r\nsetkey(y, \"id\")\r\nhaskey(x); haskey(y)\r\n\r\n\r\n[1] TRUE\r\n[1] TRUE\r\n\r\nkey(x); key(y)\r\n\r\n\r\n[1] \"id\"\r\n[1] \"id\"\r\n\r\njoins with keys already specified\r\nInner join x and y\r\n\r\n\r\nx[y, nomatch = 0]\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  4 14 19\r\n3:  6  8  2\r\n4:  6  8  4\r\n\r\nRight join x and y\r\n\r\n\r\nx[y]\r\n\r\n\r\n   id  x  y\r\n1:  1  9  8\r\n2:  3 NA 14\r\n3:  4 14 19\r\n4:  6  8  2\r\n5:  6  8  4\r\n\r\nLeft join x and y\r\n\r\n\r\ny[x]\r\n\r\n\r\n   id  y  x\r\n1:  1  8  9\r\n2:  2 NA 12\r\n3:  4 19 14\r\n4:  5 NA 21\r\n5:  6  2  8\r\n6:  6  4  8\r\n\r\nExercise 3\r\n\r\n\r\nlibrary(dplyr)\r\nlibrary(data.table)\r\ndata(starwars)\r\nstarwarsDT <- as.data.table(starwars)\r\nstarwarsDT[1]\r\n\r\n\r\n             name height mass hair_color skin_color eye_color\r\n1: Luke Skywalker    172   77      blond       fair      blue\r\n   birth_year  sex    gender homeworld species\r\n1:         19 male masculine  Tatooine   Human\r\n                                                                                         films\r\n1: The Empire Strikes Back,Revenge of the Sith,Return of the Jedi,A New Hope,The Force Awakens\r\n                            vehicles               starships\r\n1: Snowspeeder,Imperial Speeder Bike X-wing,Imperial shuttle\r\n\r\nstarwarsDT[, .(min = min(mass, na.rm = T),\r\n               max = max(mass, na.rm = T),\r\n               nobs = .N), by = homeworld][nobs >1] \r\n\r\n\r\n    homeworld   min   max nobs\r\n 1:  Tatooine  32.0 136.0   10\r\n 2:     Naboo  32.0  85.0   11\r\n 3:  Alderaan  49.0  79.0    3\r\n 4:  Kashyyyk 112.0 136.0    2\r\n 5:  Corellia  77.0  80.0    2\r\n 6:      <NA>  17.0 140.0   10\r\n 7:    Kamino  78.2  88.0    3\r\n 8: Coruscant  50.0  50.0    3\r\n 9:    Ryloth  55.0  55.0    2\r\n10:    Mirial  50.0  56.2    2\r\n\r\nReshaping data with data.table\r\nTidy data\r\nEach variable is a column -Each observation is a row\r\nEach value is a cell\r\n\r\nTwo fundamental verbs\r\nmelt(): â€˜Wideâ€™ -> â€˜longâ€™ data\r\ndcast(): â€˜longâ€™ -> â€˜wideâ€™ data\r\n\r\nWide format\r\n\r\n\r\nknitr::kable(head(iris[1:4,], n =3))\r\n\r\n\r\n\r\nSepal.Length\r\n\r\n\r\nSepal.Width\r\n\r\n\r\nPetal.Length\r\n\r\n\r\nPetal.Width\r\n\r\n\r\nSpecies\r\n\r\n\r\n5.1\r\n\r\n\r\n3.5\r\n\r\n\r\n1.4\r\n\r\n\r\n0.2\r\n\r\n\r\nsetosa\r\n\r\n\r\n4.9\r\n\r\n\r\n3.0\r\n\r\n\r\n1.4\r\n\r\n\r\n0.2\r\n\r\n\r\nsetosa\r\n\r\n\r\n4.7\r\n\r\n\r\n3.2\r\n\r\n\r\n1.3\r\n\r\n\r\n0.2\r\n\r\n\r\nsetosa\r\n\r\n\r\nmelt(wide_df, id.vars = 'grouping variable', variable.name = 'measures_across_grouping_var',value.name = 'value_name_as_desired')\r\nLong to wide\r\ndcast(long_df, group ~ atttribute, value.var = \"value\")\r\nSeparating and uniting information\r\n\r\n\r\nirisUnited <- irisDT[ , Sepal.Length.Width := paste0(Sepal.Length, \"/\", Sepal.Width)]\r\nirisUnited[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          6.0         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1              6/2.2\r\n2:       7.9      0.1            4.9/2.5\r\n3:       7.9      0.1            5.7/2.5\r\n4:       7.9      0.1            6.3/2.5\r\n5:       7.9      0.1            6.7/2.5\r\n\r\n\r\n\r\nirisSeparated = irisUnited[, c('Sepal.Length', 'Sepal.Width') := tstrsplit(Sepal.Length.Width, \"/\")]\r\nirisSeparated[1:5]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:            6         2.2          5.0         1.5 virginica\r\n2:          4.9         2.5          4.5         1.7 virginica\r\n3:          5.7         2.5          5.0         2.0 virginica\r\n4:          6.3         2.5          5.0         1.9 virginica\r\n5:          6.7         2.5          5.8         1.8 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1              6/2.2\r\n2:       7.9      0.1            4.9/2.5\r\n3:       7.9      0.1            5.7/2.5\r\n4:       7.9      0.1            6.3/2.5\r\n5:       7.9      0.1            6.7/2.5\r\n\r\nHands-on session\r\nExercise 1\r\n\r\n\r\ndata(\"relig_income\")\r\na = as.data.table(relig_income)\r\na[1:5]\r\n\r\n\r\n             religion <$10k $10-20k $20-30k $30-40k $40-50k $50-75k\r\n1:           Agnostic    27      34      60      81      76     137\r\n2:            Atheist    12      27      37      52      35      70\r\n3:           Buddhist    27      21      30      34      33      58\r\n4:           Catholic   418     617     732     670     638    1116\r\n5: Donâ€™t know/refused    15      14      15      11      10      35\r\n   $75-100k $100-150k >150k Don't know/refused\r\n1:      122       109    84                 96\r\n2:       73        59    74                 76\r\n3:       62        39    53                 54\r\n4:      949       792   633               1489\r\n5:       21        17    18                116\r\n\r\nb = melt(a, id.vars = \"religion\", variable.name = \"income_category\", value.name = \"n\")\r\n\r\n\r\n\r\nExercise 2\r\n\r\n\r\ndata(\"storms\")\r\naa = as.data.table(storms)\r\naa[, date:= paste0(year, \"-\", month,\"-\", day)]\r\n\r\n\r\n\r\nUseful symbols/ functions\r\n.SD: Subset of Data for each group\r\n.SD along with lapply can be used to apply any function to multiple columns by group\r\n\r\n.SDcols: Columns of the data.table that are included in .SD\r\nna.omit(): returns the object with incomplete cases removed\r\nSummarizing for specific condition\r\n\r\n\r\ncols = sapply(irisDT, is.numeric)\r\ncols = names(cols)[cols]\r\nirisDT[, lapply(.SD, mean), by = Species, .SDcols = cols]\r\n\r\n\r\n      Species Petal.Length Petal.Width maxLength minWidth\r\n1:  virginica        5.552       2.026       7.9      0.1\r\n2: versicolor        4.260       1.326       7.9      0.1\r\n3:     setosa        1.462       0.246       7.9      0.1\r\n\r\nSummarizing for specific variable of interest\r\n\r\n\r\nirisDT[, lapply(.SD, mean), by = Species, .SDcols = c(\"Petal.Length\", \"Petal.Width\")]\r\n\r\n\r\n      Species Petal.Length Petal.Width\r\n1:  virginica        5.552       2.026\r\n2: versicolor        4.260       1.326\r\n3:     setosa        1.462       0.246\r\n\r\nSummarizing all columns\r\n\r\n\r\nirisDT[ , unlist(recursive = FALSE, lapply(.(mean = mean, sd = sd, min = min, max = max), \r\n                                           function(f) lapply(.SD, f))), by = Species][1:5]\r\n\r\n\r\n      Species mean.Sepal.Length mean.Sepal.Width mean.Petal.Length\r\n1:  virginica                NA               NA             5.552\r\n2: versicolor                NA               NA             4.260\r\n3:     setosa                NA               NA             1.462\r\n4:       <NA>                NA               NA                NA\r\n5:       <NA>                NA               NA                NA\r\n   mean.Petal.Width mean.maxLength mean.minWidth\r\n1:            2.026            7.9           0.1\r\n2:            1.326            7.9           0.1\r\n3:            0.246            7.9           0.1\r\n4:               NA             NA            NA\r\n5:               NA             NA            NA\r\n   mean.Sepal.Length.Width sd.Sepal.Length sd.Sepal.Width\r\n1:                      NA       0.6358796      0.3224966\r\n2:                      NA       0.5161711      0.3137983\r\n3:                      NA       0.3524897      0.3790644\r\n4:                      NA              NA             NA\r\n5:                      NA              NA             NA\r\n   sd.Petal.Length sd.Petal.Width sd.maxLength sd.minWidth\r\n1:       0.5518947      0.2746501            0           0\r\n2:       0.4699110      0.1977527            0           0\r\n3:       0.1736640      0.1053856            0           0\r\n4:              NA             NA           NA          NA\r\n5:              NA             NA           NA          NA\r\n   sd.Sepal.Length.Width min.Sepal.Length min.Sepal.Width\r\n1:                    NA              4.9             2.2\r\n2:                    NA              4.9               2\r\n3:                    NA              4.3             2.3\r\n4:                    NA             <NA>            <NA>\r\n5:                    NA             <NA>            <NA>\r\n   min.Petal.Length min.Petal.Width min.maxLength min.minWidth\r\n1:              4.5             1.4           7.9          0.1\r\n2:              3.0             1.0           7.9          0.1\r\n3:              1.0             0.1           7.9          0.1\r\n4:               NA              NA            NA           NA\r\n5:               NA              NA            NA           NA\r\n   min.Sepal.Length.Width max.Sepal.Length max.Sepal.Width\r\n1:                4.9/2.5              7.9             3.8\r\n2:                4.9/2.4                7             3.4\r\n3:                  4.3/3              5.8             4.4\r\n4:                   <NA>             <NA>            <NA>\r\n5:                   <NA>             <NA>            <NA>\r\n   max.Petal.Length max.Petal.Width max.maxLength max.minWidth\r\n1:              6.9             2.5           7.9          0.1\r\n2:              5.1             1.8           7.9          0.1\r\n3:              1.9             0.6           7.9          0.1\r\n4:               NA              NA            NA           NA\r\n5:               NA              NA            NA           NA\r\n   max.Sepal.Length.Width\r\n1:                7.9/3.8\r\n2:                  7/3.2\r\n3:                  5/3.6\r\n4:                   <NA>\r\n5:                   <NA>\r\n\r\nHands-on 3\r\nExercise 1 - Compute the minimum, maximum, median and mean for all numeric columns\r\n\r\n\r\ndata(\"starwars\")\r\nstarwarsDT = as.data.table(starwars)\r\ncols = sapply(starwarsDT, is.numeric)\r\ncols = names(cols)[cols]\r\n\r\nstarwarsDT[, height:= as.numeric(height)]\r\n\r\nstarwarsDT[, unlist(recursive = F,\r\n                    lapply(.(min = min, max = max, median = median, mean = mean), function(f) lapply(.SD, f))), by = .(homeworld, species), .SDcols = cols][1:5]\r\n\r\n\r\n   homeworld species min.height min.mass min.birth_year max.height\r\n1:  Tatooine   Human        163       NA             19        202\r\n2:  Tatooine   Droid         97       32             NA        167\r\n3:     Naboo   Droid         96       32             33         96\r\n4:  Alderaan   Human        150       NA             NA        191\r\n5:   Stewjon   Human        182       77             57        182\r\n   max.mass max.birth_year median.height median.mass\r\n1:       NA             82         180.5          NA\r\n2:       75             NA         132.0        53.5\r\n3:       32             33          96.0        32.0\r\n4:       NA             NA         188.0          NA\r\n5:       77             57         182.0        77.0\r\n   median.birth_year mean.height mean.mass mean.birth_year\r\n1:             44.45    179.2500        NA          47.475\r\n2:                NA    132.0000      53.5              NA\r\n3:             33.00     96.0000      32.0          33.000\r\n4:                NA    176.3333        NA              NA\r\n5:             57.00    182.0000      77.0          57.000\r\n\r\nExercise 2 - all colnames to upper case\r\n\r\n\r\nstarwarsDT = as.data.table(starwars)\r\nsetnames(starwarsDT, toupper(names(starwarsDT)))\r\n\r\n\r\n\r\nConvert all character columns to upper case\r\n\r\n\r\ncols = sapply(starwarsDT, is.character)\r\ncols = names(cols)[cols]\r\nstarwarsDT[, lapply(.SD, toupper)][1:5]\r\n\r\n\r\n             NAME HEIGHT MASS HAIR_COLOR  SKIN_COLOR EYE_COLOR\r\n1: LUKE SKYWALKER    172   77      BLOND        FAIR      BLUE\r\n2:          C-3PO    167   75       <NA>        GOLD    YELLOW\r\n3:          R2-D2     96   32       <NA> WHITE, BLUE       RED\r\n4:    DARTH VADER    202  136       NONE       WHITE    YELLOW\r\n5:    LEIA ORGANA    150   49      BROWN       LIGHT     BROWN\r\n   BIRTH_YEAR    SEX    GENDER HOMEWORLD SPECIES\r\n1:         19   MALE MASCULINE  TATOOINE   HUMAN\r\n2:        112   NONE MASCULINE  TATOOINE   DROID\r\n3:         33   NONE MASCULINE     NABOO   DROID\r\n4:       41.9   MALE MASCULINE  TATOOINE   HUMAN\r\n5:         19 FEMALE  FEMININE  ALDERAAN   HUMAN\r\n                                                                                                                                                        FILMS\r\n1:                                               C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n2:                      C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n3: C(\"THE EMPIRE STRIKES BACK\", \"ATTACK OF THE CLONES\", \"THE PHANTOM MENACE\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n4:                                                                    C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\")\r\n5:                                               C(\"THE EMPIRE STRIKES BACK\", \"REVENGE OF THE SITH\", \"RETURN OF THE JEDI\", \"A NEW HOPE\", \"THE FORCE AWAKENS\")\r\n                                    VEHICLES\r\n1: C(\"SNOWSPEEDER\", \"IMPERIAL SPEEDER BIKE\")\r\n2:                              CHARACTER(0)\r\n3:                              CHARACTER(0)\r\n4:                              CHARACTER(0)\r\n5:                     IMPERIAL SPEEDER BIKE\r\n                         STARSHIPS\r\n1: C(\"X-WING\", \"IMPERIAL SHUTTLE\")\r\n2:                    CHARACTER(0)\r\n3:                    CHARACTER(0)\r\n4:                 TIE ADVANCED X1\r\n5:                    CHARACTER(0)\r\n\r\nExercise 3\r\nRemove the data which have NA for the numeric variables\r\nGroup the data by all character variables\r\nCompute the mean for ts_diameter and hu_diameter\r\n\r\n\r\nstormsDT <- as.data.table(storms)\r\nnumericCols = sapply(stormsDT, is.numeric)\r\nnumericCols = names(numericCols)[numericCols]\r\nstormsDTNew <- na.omit(stormsDT, cols = numericCols)\r\ncharacterCols <- sapply(stormsDTNew, is.character)\r\ncharacterCols <- names(characterCols)[characterCols]\r\ncolsOfInterest <- c(\"ts_diameter\", \"hu_diameter\")\r\nstormsDTNew[, lapply(.SD, mean), .SDcols = colsOfInterest, by = characterCols][1:5]\r\n\r\n\r\n     name              status ts_diameter hu_diameter\r\n1:   Alex tropical depression     0.00000      0.0000\r\n2:   Alex      tropical storm   150.80013      0.0000\r\n3:   Alex           hurricane   304.40871     63.5669\r\n4: Bonnie tropical depression     0.00000      0.0000\r\n5: Bonnie      tropical storm    75.40637      0.0000\r\n\r\n.SD: Subset of data - choose row by ordinal position\r\n\r\n\r\n# irisDT[, .SD[1L]]\r\n# irisDT[, .SD[1L], by = Species]\r\nirisDT[, .SD[1L], by = Species, .SDcols = c(\"Petal.Length\", \"Petal.Width\")]\r\n\r\n\r\n      Species Petal.Length Petal.Width\r\n1:  virginica          5.0         1.5\r\n2: versicolor          3.5         1.0\r\n3:     setosa          1.3         0.3\r\n\r\n.SD: Subset of Data - select top entries (in each group)\r\n\r\n\r\nirisDT[order(-Sepal.Length), .SD[1:2]]\r\n\r\n\r\n   Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\r\n1:          7.9         3.8          6.4         2.0 virginica\r\n2:          7.7         2.6          6.9         2.3 virginica\r\n   maxLength minWidth Sepal.Length.Width\r\n1:       7.9      0.1            7.9/3.8\r\n2:       7.9      0.1            7.7/2.6\r\n\r\nirisDT[, .SD[which.max(Sepal.Length)], by = Species, .SDcols = c(\"Sepal.Length\",\"Sepal.Width\")]\r\n\r\n\r\n      Species Sepal.Length Sepal.Width\r\n1:  virginica          7.9         3.8\r\n2: versicolor            7         3.2\r\n3:     setosa          5.8           4\r\n\r\nMultiple if else statements\r\n\r\n\r\nirisDT[, text := {\r\n  if(Sepal.Length > 4 & Sepal.Width > 4) \"sepal length and width is larger than 4\"\r\n  else if(Petal.Length < 2 & Petal.Width < 2) \"petal length and width is smaller than 2\"\r\n  else \"other\"\r\n}, by = .(Species, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)][, .SD[1], by = text][1:5]\r\n\r\n\r\n                                       text Sepal.Length Sepal.Width\r\n1:                                    other            6         2.2\r\n2: petal length and width is smaller than 2          4.5         2.3\r\n3:  sepal length and width is larger than 4          5.2         4.1\r\n4:                                     <NA>         <NA>        <NA>\r\n5:                                     <NA>         <NA>        <NA>\r\n   Petal.Length Petal.Width   Species maxLength minWidth\r\n1:          5.0         1.5 virginica       7.9      0.1\r\n2:          1.3         0.3    setosa       7.9      0.1\r\n3:          1.5         0.1    setosa       7.9      0.1\r\n4:           NA          NA      <NA>        NA       NA\r\n5:           NA          NA      <NA>        NA       NA\r\n   Sepal.Length.Width\r\n1:              6/2.2\r\n2:            4.5/2.3\r\n3:            5.2/4.1\r\n4:               <NA>\r\n5:               <NA>\r\n\r\n\r\n\r\nbin_iris <- function(sl, sw, pl, pw){\r\n  if(sl > 4 & sw > 4) \"sepal length and width is larger than 4\"\r\n  else if(pl < 2 & pw < 2) \"petal length and width is smaller than 2\"\r\n  else \"other\"\r\n}\r\nirisDT[, text := bin_iris(Sepal.Length, Sepal.Width, Petal.Length, Petal.Width), \r\n       by = .(Species, Sepal.Length, Sepal.Width, Petal.Length, Petal.Width)][, .SD[1], by = text][1:5]\r\n\r\n\r\n                                       text Sepal.Length Sepal.Width\r\n1:                                    other            6         2.2\r\n2: petal length and width is smaller than 2          4.5         2.3\r\n3:  sepal length and width is larger than 4          5.2         4.1\r\n4:                                     <NA>         <NA>        <NA>\r\n5:                                     <NA>         <NA>        <NA>\r\n   Petal.Length Petal.Width   Species maxLength minWidth\r\n1:          5.0         1.5 virginica       7.9      0.1\r\n2:          1.3         0.3    setosa       7.9      0.1\r\n3:          1.5         0.1    setosa       7.9      0.1\r\n4:           NA          NA      <NA>        NA       NA\r\n5:           NA          NA      <NA>        NA       NA\r\n   Sepal.Length.Width\r\n1:              6/2.2\r\n2:            4.5/2.3\r\n3:            5.2/4.1\r\n4:               <NA>\r\n5:               <NA>\r\n\r\nHands - on 4\r\nExercise 1\r\nPrint the fifth row for each species.\r\n\r\n\r\nstarwarsDT <- as.data.table(starwars)\r\nstarwarsDT[, if(.N >= 5) .SD[5L], by = species]\r\n\r\n\r\n   species               name height mass hair_color  skin_color\r\n1:   Human Beru Whitesun lars    165   75      brown       light\r\n2:   Droid             R4-P17     96   NA       none silver, red\r\n   eye_color birth_year    sex   gender homeworld\r\n1:      blue         47 female feminine  Tatooine\r\n2: red, blue         NA   none feminine      <NA>\r\n                                                 films vehicles\r\n1: Attack of the Clones,Revenge of the Sith,A New Hope         \r\n2:            Attack of the Clones,Revenge of the Sith         \r\n   starships\r\n1:          \r\n2:          \r\n\r\nExercise 2\r\nConsider the columns name, status and pressure.\r\nPrint for each storm, the 5 entries with the lowest pressure.\r\n\r\n\r\nstormsDT <- as.data.table(storms)\r\nstormsDT[, .(name, status, pressure)][order(name, pressure)][, .SD[1:min(5, .N)], by = name][1:5]\r\n\r\n\r\n       name              status pressure\r\n1: AL011993 tropical depression      999\r\n2: AL011993 tropical depression      999\r\n3: AL011993 tropical depression      999\r\n4: AL011993 tropical depression      999\r\n5: AL011993 tropical depression     1000\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-03-15T16:40:13+01:00",
    "input_file": "data-munging-withdatatable.utf8.md"
  }
]
